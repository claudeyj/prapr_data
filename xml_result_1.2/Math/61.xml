<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local mean is replaced by local sd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local sd is replaced by local mean to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Substituted 1.0E-9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMean(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMean(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.solverAbsoluteAccuracy is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMean(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMeanInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMeanInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.solverAbsoluteAccuracy is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMeanInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviation(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>122ms</time></test></testsExecutionTime><patchExecutionTime>190ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviation(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.solverAbsoluteAccuracy is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviation(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviationInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviationInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.solverAbsoluteAccuracy is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviationInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to mean with an access to standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to standardDeviation with an access to mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to solverAbsoluteAccuracy with an access to mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to solverAbsoluteAccuracy with an access to standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field mean is replaced by access to local mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field standardDeviation is replaced by access to local mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field solverAbsoluteAccuracy is replaced by access to local mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field mean is replaced by access to local sd</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field standardDeviation is replaced by access to local sd</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field solverAbsoluteAccuracy is replaced by access to local sd</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field mean is replaced by access to local inverseCumAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field standardDeviation is replaced by access to local inverseCumAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field solverAbsoluteAccuracy is replaced by access to local inverseCumAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local mean is replaced by local sd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local sd is replaced by local mean to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local inverseCumAccuracy is replaced by local mean to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local mean is replaced by local inverseCumAccuracy to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local sd is replaced by local inverseCumAccuracy to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local inverseCumAccuracy is replaced by local sd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to setMeanInternal with a call to setMean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to setStandardDeviationInternal with a call to setMean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to setMeanInternal with a call to setStandardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to setStandardDeviationInternal with a call to setMeanInternal</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to setMeanInternal with a call to setStandardDeviationInternal</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to setStandardDeviationInternal with a call to setStandardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setMeanInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setStandardDeviationInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setMeanInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setStandardDeviationInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setMeanInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setStandardDeviationInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setMeanInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setStandardDeviationInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setMeanInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to setStandardDeviationInternal(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMeanInternal(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviationInternal(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/math/distribution/NormalDistributionImpl::setMeanInternal</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/math/distribution/NormalDistributionImpl::setStandardDeviationInternal</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Removed assignment to member variable mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Removed assignment to member variable standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Removed assignment to member variable solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMean(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMeanInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviation(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.mean is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviationInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to mean with an access to standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field mean is replaced by access to local newMean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local newMean is replaced by access to field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local newMean is replaced by access to field SQRT2PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local newMean is replaced by access to field mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local newMean is replaced by access to field standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local newMean is replaced by access to field solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setMeanInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Removed assignment to member variable mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMean(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setMeanInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviation(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation is replaced by the call to org.apache.commons.math.distribution.NormalDistributionImpl::setStandardDeviationInternal(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to standardDeviation with an access to mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field standardDeviation is replaced by access to local sd</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field DEFAULT_INVERSE_ABSOLUTE_ACCURACY</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field SQRT2PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field SQRT2PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local sd is replaced by access to field solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NormalDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.NormalDistributionImpl</mutatedClass><mutatedMethod>setStandardDeviationInternal</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Removed assignment to member variable standardDeviation</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DDI)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1.0E-12 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 10000000 with 10000001</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/Throwable;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException; with a call to createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to epsilon with an access to mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to NOT_POSITIVE_POISSON_MEAN with an access to ARGUMENT_OUTSIDE_DOMAIN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to mean with an access to epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to epsilon with an access to mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to NOT_POSITIVE_POISSON_MEAN with an access to ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to NOT_POSITIVE_POISSON_MEAN with an access to ARRAY_SUMS_TO_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to NOT_POSITIVE_POISSON_MEAN with an access to ASSYMETRIC_EIGEN_NOT_SUPPORTED</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to NOT_POSITIVE_POISSON_MEAN with an access to AT_LEAST_ONE_COLUMN</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to NOT_POSITIVE_POISSON_MEAN with an access to AT_LEAST_ONE_ROW</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field maxIterations is replaced by access to local maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field epsilon is replaced by access to local p</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field mean is replaced by access to local p</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field epsilon is replaced by access to local p</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field maxIterations is replaced by access to local maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field epsilon is replaced by access to local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field mean is replaced by access to local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field epsilon is replaced by access to local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>local p is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local epsilon is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to sqrt with a call to expm1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::sqrt with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>119ms</time></test></testsExecutionTime><patchExecutionTime>179ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/distribution/NormalDistributionImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 10000000 with 10000001</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1.0E-12 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/math/MathRuntimeException::createIllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable mean</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable normal</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PoissonDistributionImpl.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.PoissonDistributionImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>Removed assignment to member variable val$pattern</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>Removed assignment to member variable val$arguments</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to sqrt with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced call to java/lang/Math::sqrt with argument</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>removed call to java/lang/Math::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.036588086663230115</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>removed call to org/apache/commons/math/random/RandomDataImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>Substituted 1.0E-6 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>Removed assignment to member variable randomData</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractContinuousDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractContinuousDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.0625</suspValue><description>Removed assignment to member variable solverAbsoluteAccuracy</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>136ms</time></test></testsExecutionTime><patchExecutionTime>194ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>126ms</time></test></testsExecutionTime><patchExecutionTime>197ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>removed call to org/apache/commons/math/random/RandomDataImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractIntegerDistribution.java</sourceFile><mutatedClass>org.apache.commons.math.distribution.AbstractIntegerDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.12803687993289598</suspValue><description>Removed assignment to member variable randomData</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException</mutatedClass><mutatedMethod>createIllegalArgumentException</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>removed call to org/apache/commons/math/MathRuntimeException$4::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException</mutatedClass><mutatedMethod>createIllegalArgumentException</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>replaced return value with null for org/apache/commons/math/MathRuntimeException::createIllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathRuntimeException.java</sourceFile><mutatedClass>org.apache.commons.math.MathRuntimeException</mutatedClass><mutatedMethod>createIllegalArgumentException</mutatedMethod><methodDescription>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.07412493166611012</suspValue><description>mutated return of Object value for org/apache/commons/math/MathRuntimeException::createIllegalArgumentException to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RandomDataImpl.java</sourceFile><mutatedClass>org.apache.commons.math.random.RandomDataImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.05598925109558543</suspValue><description>Removed assignment to member variable rand</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RandomDataImpl.java</sourceFile><mutatedClass>org.apache.commons.math.random.RandomDataImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</killingTests><suspValue>0.05598925109558543</suspValue><description>Removed assignment to member variable secRand</description><testsExecutionTime><test><name>org.apache.commons.math.distribution.PoissonDistributionTest.testMean(org.apache.commons.math.distribution.PoissonDistributionTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
</mutations>
