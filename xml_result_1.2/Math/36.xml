<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to compareTo(Ljava/math/BigInteger;)I with a call to compareTo(Ljava/lang/Object;)I</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to NUMERATOR with an access to ARGUMENT_OUTSIDE_DOMAIN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to DENOMINATOR with an access to ARGUMENT_OUTSIDE_DOMAIN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to ZERO with an access to ONE</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to ZERO with an access to ONE</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>59</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced access to ONE with an access to ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced access to ZERO with an access to ONE</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to NUMERATOR with an access to ARRAY_SIZE_EXCEEDS_MAX_VARIABLES</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to DENOMINATOR with an access to ARRAY_SIZE_EXCEEDS_MAX_VARIABLES</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to ZERO with an access to TEN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to ZERO with an access to TEN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>59</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced access to ONE with an access to TEN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced access to ZERO with an access to TEN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to NUMERATOR with an access to ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to DENOMINATOR with an access to ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to NUMERATOR with an access to ARRAY_SUMS_TO_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to DENOMINATOR with an access to ARRAY_SUMS_TO_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to NUMERATOR with an access to ASSYMETRIC_EIGEN_NOT_SUPPORTED</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to DENOMINATOR with an access to ASSYMETRIC_EIGEN_NOT_SUPPORTED</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to NUMERATOR with an access to AT_LEAST_ONE_COLUMN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to DENOMINATOR with an access to AT_LEAST_ONE_COLUMN</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field ZERO is replaced by access to local num</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field ZERO is replaced by access to local num</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>59</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field ONE is replaced by access to local num</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field ZERO is replaced by access to local num</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field numerator is replaced by access to local num</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field denominator is replaced by access to local num</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field ZERO is replaced by access to local den</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field ZERO is replaced by access to local den</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>59</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field ONE is replaced by access to local den</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field ZERO is replaced by access to local den</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field numerator is replaced by access to local den</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field denominator is replaced by access to local den</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>59</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field ONE is replaced by access to local gcd</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field ZERO is replaced by access to local gcd</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field numerator is replaced by access to local gcd</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>access to field denominator is replaced by access to local gcd</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local num is replaced by local den to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local den is replaced by local num to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local den is replaced by local num to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local num is replaced by local den to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testBigDecimalValue(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local num is replaced by local den to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.fraction.BigFractionTest.testDoubleValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.fraction.BigFractionTest.testBigDecimalValue(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local den is replaced by local num to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local gcd is replaced by local num to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local den is replaced by local num to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local num is replaced by local den to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>99</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local den is replaced by local num to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local gcd is replaced by local den to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local den is replaced by local gcd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>94</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local num is replaced by local gcd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>99</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>local den is replaced by local gcd to be used</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to add</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to subtract</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to multiply</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to divide</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to remainder</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to mod</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to modInverse</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to and</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to or</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to gcd with a call to xor</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to java.math.BigInteger::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to java.math.BigInteger::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to java.math.BigInteger::gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to java.math.BigInteger::compareTo(Ljava/math/BigInteger;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to java.math.BigInteger::compareTo(Ljava/math/BigInteger;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>the call to compareTo(Ljava/math/BigInteger;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testBigDecimalValue(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to java/math/BigInteger::gcd with argument</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.fraction.BigFractionTest.testDoubleValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>22ms</time></test><test><name>org.apache.commons.math.fraction.BigFractionTest.testBigDecimalValue(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed call to java/math/BigInteger::equals</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed call to java/math/BigInteger::equals</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>removed call to java/math/BigInteger::gcd</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>removed call to java/math/BigInteger::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>removed call to java/math/BigInteger::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>62</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>62</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::checkNotNull</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::checkNotNull</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>95</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>Removed assignment to member variable numerator</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>100</index><block>6</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>Removed assignment to member variable denominator</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigFraction.java</sourceFile><mutatedClass>org.apache.commons.math.fraction.BigFraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>55</index><block>4</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.21081851067789195</suspValue><description>replaced call to java/math/BigInteger::gcd with receiver</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20628424925175867</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20628424925175867</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</killingTests><suspValue>0.20628424925175867</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(org.apache.commons.math.fraction.BigFractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
</mutations>
