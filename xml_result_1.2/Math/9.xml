<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>103</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>104</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>109</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>110</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>116</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>118</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>123</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>124</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>128</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>135</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>136</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>141</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>142</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>147</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>148</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>149</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>152</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>153</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>159</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>160</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>161</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>163</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>169</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>184</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>61</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>70</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>97</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>103</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>104</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>109</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>110</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>115</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>116</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>118</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>123</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>124</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>127</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>128</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>135</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>136</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>141</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>142</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>147</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>148</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>149</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>152</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>153</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>159</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>160</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>161</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>163</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>169</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>184</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>61</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>62</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>70</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>97</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>103</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>104</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>109</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>110</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>115</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>116</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>118</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>123</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>124</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>127</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>128</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>135</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>136</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>141</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>142</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>147</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>148</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>149</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>152</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>153</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>159</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>160</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>161</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>163</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>169</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>184</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>61</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>62</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>70</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>97</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>103</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>104</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>109</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>110</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>115</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>116</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>118</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>123</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>124</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>127</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>128</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>135</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>136</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>141</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>142</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>147</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>148</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>149</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>152</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>153</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>159</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>160</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>161</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>163</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>169</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>184</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>61</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>62</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>70</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>97</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>103</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>104</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>109</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>110</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>115</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>116</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>118</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>123</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>124</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>127</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>128</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>135</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>136</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>141</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>142</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>147</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>148</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>149</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>152</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>153</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>159</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>160</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>161</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>163</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Low is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>169</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>184</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb1 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>61</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a1High is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>62</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b1Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>70</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local ca2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local cb2 is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>97</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>103</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>104</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>109</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>110</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2 is replaced by local a1Low to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>115</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>116</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>118</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>123</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>124</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>127</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local a2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>128</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local b2Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>135</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>136</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>141</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>142</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>147</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>148</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>149</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>152</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>153</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Prime is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>159</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12High is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>160</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod1Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>161</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local prod2Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>163</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local s12Low is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>169</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>184</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>local result is replaced by local a1High to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>170</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>868</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>869</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>881</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>170</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>185</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>171</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>171</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>185</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>946</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>83</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>90</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>95</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>103</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>104</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>110</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>116</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>118</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>123</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>124</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>136</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>141</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>142</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>149</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>163</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>181</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>182</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>184</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>185</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>190</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>193</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>194</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>201</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>202</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>207</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>208</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>213</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>214</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>215</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>219</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>225</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>226</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>231</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>232</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>237</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>238</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>239</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>242</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>243</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>249</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>250</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>251</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>253</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>255</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>257</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Low is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>263</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>282</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>946</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>61</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>83</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>90</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>95</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>97</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>103</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>104</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>110</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>116</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>118</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>123</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>124</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>127</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>136</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>141</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>142</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>149</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>163</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>181</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>182</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>184</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>185</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>190</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>193</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>194</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>201</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>202</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>207</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>208</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>213</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>214</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>215</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>218</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>219</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>225</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>226</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>231</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>232</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>237</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>238</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>239</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>242</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>243</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>249</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>250</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>251</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>253</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>255</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>257</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Low is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>263</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>282</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local b1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>946</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>61</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>83</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>90</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>95</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>97</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>103</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>104</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>110</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>116</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>118</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>123</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>124</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>127</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>136</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>141</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>142</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>149</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>163</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>181</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>182</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>184</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>185</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>190</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>193</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>194</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>201</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>202</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>207</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>208</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>213</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>214</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>215</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>218</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>219</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>225</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>226</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>231</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>232</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>237</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>238</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>239</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>242</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>243</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>249</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>250</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>251</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>253</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>255</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>257</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Low is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>263</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>282</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>946</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>61</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>83</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>90</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>95</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>97</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>103</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>104</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>110</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>116</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>118</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>123</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>124</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>127</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>136</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>141</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>142</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>149</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>163</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>170</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>181</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>182</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>184</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>185</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>190</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>193</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>194</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>201</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>202</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>207</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>208</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>213</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>214</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>215</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>218</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>219</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>225</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>226</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>231</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>232</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>237</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>238</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>239</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>242</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>243</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>249</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>250</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>251</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>253</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>255</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>257</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Low is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>263</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>282</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local b2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>946</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>61</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>83</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>90</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>95</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>97</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>103</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>104</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>110</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>116</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>118</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>123</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>124</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>127</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>136</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>141</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>142</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>149</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>163</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>170</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>181</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>182</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>184</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>185</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>190</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>193</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>194</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>201</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>202</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>207</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>208</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>213</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>214</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>215</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>218</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>219</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>225</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>226</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>231</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>232</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>237</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>238</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>239</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>242</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>243</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>249</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>250</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>251</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>253</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>255</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>257</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Low is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>263</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>282</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local a3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb1 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>61</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b1Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>75</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>83</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>90</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>95</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb2 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>97</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>103</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>104</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>110</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>116</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>118</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>71ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>123</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>124</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>127</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b2Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>136</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>141</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>142</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local ca3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>149</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local cb3 is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>163</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>170</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3 is replaced by local ca1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>181</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>182</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>184</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>185</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>190</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>193</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local a3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>194</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local b3Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>201</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>202</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>207</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>208</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>213</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>214</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>215</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>218</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>219</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Prime is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>225</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>226</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>231</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>232</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>237</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>238</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>239</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>242</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>243</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Prime is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>249</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123High is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>250</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod1Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>251</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod2Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>253</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local prod3Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>255</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s12Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>257</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local s123Low is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>263</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>282</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local result is replaced by local b3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>264</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>135</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1.34217729E8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>984</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>265</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>264</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>283</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>265</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>265</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>linearCombination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>283</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field x is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field y is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field z is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field x is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field y is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field z is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field x is replaced by access to local z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field y is replaced by access to local z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field z is replaced by access to local z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local z is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local x is replaced by local z to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local y is replaced by local z to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local z is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>Removed assignment to member variable x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>Removed assignment to member variable y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>Removed assignment to member variable z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to x is guarded using local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to y is guarded using local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to z is guarded using local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to field x is replaced by access to local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to field x is replaced by access to local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to field y is replaced by access to local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to field y is replaced by access to local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to field z is replaced by access to local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to field z is replaced by access to local a</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>1</block><killingTests/><suspValue>0.1643989873053573</suspValue><description>local this is replaced by local u to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>5ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>local this is replaced by local u to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>local u is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>local this is replaced by local u to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>local u is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>local this is replaced by local u to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>local u is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>Removed assignment to member variable x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>Removed assignment to member variable y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>Removed assignment to member variable z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to linearCombination(DDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded using local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded using local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded using local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded using local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded using local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded using local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field x is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field x is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field x is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field y is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field y is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field y is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field z is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field z is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field z is replaced by access to local a1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field x is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field x is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field x is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field y is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field y is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field y is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field z is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field z is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>access to field z is replaced by access to local a2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>2</block><killingTests/><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u1 to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>4ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u1 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u2 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u1 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u2 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local a1 is replaced by local a2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u1 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local a2 is replaced by local a1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u2 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>3</index><block>2</block><killingTests/><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u2 to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>1ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u1 is replaced by local u2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u2 is replaced by local u1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u1 is replaced by local u2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u2 is replaced by local u1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local this is replaced by local u2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u1 is replaced by local u2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local u2 is replaced by local u1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to x is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to y is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination([D[D)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to linearCombination(DDDDDD)D with a call to linearCombination(DDDDDDDD)D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>local this is replaced by local v3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>local v3 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>local this is replaced by local v3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>local v3 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>local this is replaced by local v3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>local v3 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>access to local v3 is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to the local v is replaced a call v.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to the local v3 is replaced a call v3.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to the local v3 is replaced a call v3.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to the local v3 is replaced a call v3.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to x is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to y is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to z is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::dotProduct</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)D</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>7</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::dotProduct</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>71ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>74ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to x is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to z is guarded returning field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getNormSq</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>getNormSq</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getNormSq</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>11</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to x is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to y is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to x is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to y is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to z is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to x is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to y is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>the access to z is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>7</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>10</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>13</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::negate</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.5</suspValue><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::negate to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to &#60;init&#62;(DDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local this is replaced by local v3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local v3 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local this is replaced by local v3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local v3 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local this is replaced by local v3 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local v3 is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local v3 is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to the local v is replaced a call v.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to the local v3 is replaced a call v3.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to the local v3 is replaced a call v3.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to the local v3 is replaced a call v3.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to x is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to y is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>21</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to z is guarded returning field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::subtract</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::subtract to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to x is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to z is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to x is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to y is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to z is guarded using field x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getX()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getZ()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm1()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.x is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.y is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Vector3D.z is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNorm()D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to x with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to z with an access to x</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to x with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to y with an access to z</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to z with an access to y</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field PLUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field MINUS_I</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field PLUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field MINUS_J</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to the local this is replaced a call this.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to x is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to y is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCoordinates(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::toArray</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCoordinates(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vector3D.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Vector3D</mutatedClass><mutatedMethod>toArray</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCoordinates(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Vector3D::toArray to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCoordinates(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.geometry.euclidean.threed.Line::reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Line::reset</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to direction is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to direction is guarded using field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.direction is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.direction is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced access to direction with an access to zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testTetrahedron(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to the local this is replaced a call this.revert()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testContains(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testIntersection(org.apache.commons.math3.geometry.euclidean.threed.PlaneTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testSimilar(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testTetrahedron(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to direction is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to direction is guarded returning field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Line::getDirection</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>getDirection</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Line::getDirection to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to factory method org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is replaced by an instantiation of type org.apache.commons.math3.geometry.euclidean.threed.Vector3D using (DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>MethodNameMutator_4</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to factory method org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is replaced by an instantiation of type org.apache.commons.math3.geometry.euclidean.threed.Vector3D using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced access to direction with an access to zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>54</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced access to zero with an access to direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to field direction is replaced by access to local p1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>54</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to field zero is replaced by access to local p1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to field direction is replaced by access to local p2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>54</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to field zero is replaced by access to local p2</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to field direction is replaced by access to local delta</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>54</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to field zero is replaced by access to local delta</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local delta to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local delta is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p2 is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p1 is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p1 is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p1 is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p2 is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p1 is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p1 is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local p1 is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to local delta is replaced by access to field zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local p2 is replaced a call p2.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local p1 is replaced a call p1.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local delta is replaced a call delta.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local this is replaced a call this.revert()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local delta is replaced a call delta.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local this is replaced a call this.revert()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local p1 is replaced a call p1.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local p1 is replaced a call p1.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local delta is replaced a call delta.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>52</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to the local delta is replaced a call delta.getZero()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract with a call to add</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getX</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to dotProduct with a call to distance1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to subtract with a call to crossProduct</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getY</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to dotProduct with a call to distance</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getZ</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to dotProduct with a call to distanceInf</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getNorm1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to dotProduct with a call to distanceSq</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getNorm</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getNormInf</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getAlpha</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to getNormSq with a call to getDelta</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to sqrt with a call to expm1</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::getNormSq()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to getNormSq()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to getNormSq()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to getNormSq()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to getNormSq()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to getNormSq()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>49</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::subtract</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getNormSq</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::dotProduct</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>54</index><block>3</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::subtract with receiver</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>MethodNameMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the call to factory method org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is replaced by an instantiation of type org.apache.commons.math3.geometry.euclidean.threed.Vector3D using (DDD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>MethodNameMutator_4</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the call to factory method org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is replaced by an instantiation of type org.apache.commons.math3.geometry.euclidean.threed.Vector3D using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; with a call to subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to direction is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded using field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded using field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to direction is guarded using field direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.zero is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.zero is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.direction is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.zero is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.zero is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to field org.apache.commons.math3.geometry.euclidean.threed.Line.direction is replaced by the call to org.apache.commons.math3.geometry.euclidean.threed.Line::getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to zero with an access to direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to zero with an access to direction</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced access to direction with an access to zero</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>local reverted is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to the local this is replaced a call this.revert()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to the local this is replaced a call this.revert()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to the local this is replaced a call this.revert()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to the local reverted is replaced a call reverted.revert()</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract with a call to add</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to subtract with a call to crossProduct</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the call to org.apache.commons.math3.geometry.euclidean.threed.Vector3D::subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to direction is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to zero is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the access to direction is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>the call to subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D; is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Line::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::subtract</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Line::revert</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Line::revert to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Line.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Line</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::subtract with receiver</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>access to local a is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to sqrt with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced call to java/lang/Math::sqrt with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>removed call to java/lang/Math::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>174ms</time></test></testsExecutionTime><patchExecutionTime>200ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</killingTests><suspValue>0.023544080467400554</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
</mutations>
