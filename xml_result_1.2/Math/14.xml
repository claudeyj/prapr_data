<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field rows is replaced by access to local rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6501ms</time></test></testsExecutionTime><patchExecutionTime>6576ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field columns is replaced by access to local rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7274ms</time></test></testsExecutionTime><patchExecutionTime>7356ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>27</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field blockRows is replaced by access to local rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>140ms</time></test></testsExecutionTime><patchExecutionTime>220ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field blockColumns is replaced by access to local rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9278ms</time></test></testsExecutionTime><patchExecutionTime>9311ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field rows is replaced by access to local columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8142ms</time></test></testsExecutionTime><patchExecutionTime>8227ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field columns is replaced by access to local columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7807ms</time></test></testsExecutionTime><patchExecutionTime>7852ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>27</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field blockRows is replaced by access to local columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>186ms</time></test></testsExecutionTime><patchExecutionTime>231ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>access to field blockColumns is replaced by access to local columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Substituted 52 with 53</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Substituted 52 with 53</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Substituted 52 with 53</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7722ms</time></test></testsExecutionTime><patchExecutionTime>7802ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8403ms</time></test></testsExecutionTime><patchExecutionTime>8483ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10214ms</time></test></testsExecutionTime><patchExecutionTime>10257ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>removed call to org/apache/commons/math3/linear/BlockRealMatrix::createBlocksLayout</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>177ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>Removed assignment to member variable rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7617ms</time></test></testsExecutionTime><patchExecutionTime>7699ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>Removed assignment to member variable columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7597ms</time></test></testsExecutionTime><patchExecutionTime>7642ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>27</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Removed assignment to member variable blockRows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>0</block><killingTests/><suspValue>0.09090909090909091</suspValue><description>Removed assignment to member variable blockColumns</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.09090909090909091</suspValue><description>Removed assignment to member variable blocks</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7031ms</time></test></testsExecutionTime><patchExecutionTime>7110ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to blockColumns is guarded using value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to columns is guarded using value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to blockColumns is guarded using local blockColumn</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to columns is guarded using local blockColumn</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to blockColumns is guarded using field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to columns is guarded using field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.blockColumns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getRowDimension()I</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7014ms</time></test></testsExecutionTime><patchExecutionTime>7099ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.columns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getRowDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.blockColumns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getColumnDimension()I</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10726ms</time></test></testsExecutionTime><patchExecutionTime>10769ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.columns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getColumnDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>replaced access to blockColumns with an access to rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7425ms</time></test></testsExecutionTime><patchExecutionTime>7510ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>replaced access to columns with an access to rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>replaced access to blockColumns with an access to columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6796ms</time></test></testsExecutionTime><patchExecutionTime>6830ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>replaced access to columns with an access to blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10135ms</time></test></testsExecutionTime><patchExecutionTime>10178ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>replaced access to blockColumns with an access to blockRows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>10</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>replaced access to columns with an access to blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6968ms</time></test></testsExecutionTime><patchExecutionTime>7053ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to field blockColumns is replaced by access to local blockColumn</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7714ms</time></test></testsExecutionTime><patchExecutionTime>7755ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to field columns is replaced by access to local blockColumn</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8677ms</time></test></testsExecutionTime><patchExecutionTime>8708ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8538ms</time></test></testsExecutionTime><patchExecutionTime>8574ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6673ms</time></test></testsExecutionTime><patchExecutionTime>6756ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8193ms</time></test></testsExecutionTime><patchExecutionTime>8211ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9348ms</time></test></testsExecutionTime><patchExecutionTime>9393ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7454ms</time></test></testsExecutionTime><patchExecutionTime>7503ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7845ms</time></test></testsExecutionTime><patchExecutionTime>7926ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7855ms</time></test></testsExecutionTime><patchExecutionTime>7889ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10648ms</time></test></testsExecutionTime><patchExecutionTime>10693ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6730ms</time></test></testsExecutionTime><patchExecutionTime>6769ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>access to local blockColumn is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7179ms</time></test></testsExecutionTime><patchExecutionTime>7257ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>4</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>9</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to blockColumns is guarded returning default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to columns is guarded returning default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to blockColumns is guarded returning local blockColumn</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to columns is guarded returning local blockColumn</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>12</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to blockColumns is guarded returning field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>13</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>the access to columns is guarded returning field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10666ms</time></test></testsExecutionTime><patchExecutionTime>10705ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7533ms</time></test></testsExecutionTime><patchExecutionTime>7622ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>14</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10408ms</time></test></testsExecutionTime><patchExecutionTime>10456ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10283ms</time></test></testsExecutionTime><patchExecutionTime>10327ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7540ms</time></test></testsExecutionTime><patchExecutionTime>7624ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>13</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7043ms</time></test></testsExecutionTime><patchExecutionTime>7085ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7163ms</time></test></testsExecutionTime><patchExecutionTime>7249ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>19</index><block>14</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>replaced int return with 0 for org/apache/commons/math3/linear/BlockRealMatrix::blockWidth</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7936ms</time></test></testsExecutionTime><patchExecutionTime>8027ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06495698024616309</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9470ms</time></test></testsExecutionTime><patchExecutionTime>9503ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>14</block><killingTests/><suspValue>0.06495698024616309</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7460ms</time></test></testsExecutionTime><patchExecutionTime>7568ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10404ms</time></test></testsExecutionTime><patchExecutionTime>10441ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8303ms</time></test></testsExecutionTime><patchExecutionTime>8341ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7561ms</time></test></testsExecutionTime><patchExecutionTime>7637ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9629ms</time></test></testsExecutionTime><patchExecutionTime>9687ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9578ms</time></test></testsExecutionTime><patchExecutionTime>9656ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6883ms</time></test></testsExecutionTime><patchExecutionTime>6994ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10939ms</time></test></testsExecutionTime><patchExecutionTime>11011ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8139ms</time></test></testsExecutionTime><patchExecutionTime>8246ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to rows is guarded using value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to columns is guarded using value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to blocks is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to rows is guarded using field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to columns is guarded using field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to blocks is guarded using field blocks</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.rows is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getRowDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.columns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getRowDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.blocks is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getData()[[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.rows is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getColumnDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>8</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.columns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getColumnDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>replaced access to rows with an access to columns</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>replaced access to columns with an access to rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced access to rows with an access to blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10202ms</time></test></testsExecutionTime><patchExecutionTime>10245ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced access to columns with an access to blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8134ms</time></test></testsExecutionTime><patchExecutionTime>8211ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced access to rows with an access to blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7156ms</time></test></testsExecutionTime><patchExecutionTime>7199ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced access to columns with an access to blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7654ms</time></test></testsExecutionTime><patchExecutionTime>7691ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>local this is replaced by local copied to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>access to local i is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>access to local i is replaced by access to field rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>access to local i is replaced by access to field columns</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>access to local i is replaced by access to field blockRows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>access to local i is replaced by access to field blockColumns</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9090ms</time></test></testsExecutionTime><patchExecutionTime>9219ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>7</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10395ms</time></test></testsExecutionTime><patchExecutionTime>10521ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>17</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to rows is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to columns is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to blocks is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to rows is guarded returning local this</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to columns is guarded returning local this</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>18</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>the access to blocks is guarded returning local this</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed call to org/apache/commons/math3/linear/BlockRealMatrix::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6902ms</time></test></testsExecutionTime><patchExecutionTime>6982ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/BlockRealMatrix;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>6</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6292ms</time></test></testsExecutionTime><patchExecutionTime>6336ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local pEnd is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>79</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local qEnd is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>85</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>212ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>91</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockIndex is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>4148ms</time></test></testsExecutionTime><patchExecutionTime>4197ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>92</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local iHeight is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local jWidth is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>57ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8374ms</time></test></testsExecutionTime><patchExecutionTime>8459ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local rows is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>56</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local pEnd is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>91ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>66</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>109ms</time></test></testsExecutionTime><patchExecutionTime>232ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>70</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>79</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>188ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local qEnd is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>85</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>91</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockIndex is replaced by local columns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>3068ms</time></test></testsExecutionTime><patchExecutionTime>3095ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>92</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local iHeight is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>93</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local jWidth is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>23</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local blockColumns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local blockRows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>95ms</time></test></testsExecutionTime><patchExecutionTime>184ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>38</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local blockColumns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>1365ms</time></test></testsExecutionTime><patchExecutionTime>1449ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local rows is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>61ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>56</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pEnd is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>708ms</time></test></testsExecutionTime><patchExecutionTime>758ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>66</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local blockRows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>70</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>218ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>79</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>102ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>84</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qEnd is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>85</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>91</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockIndex is replaced by local blockRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>2461ms</time></test></testsExecutionTime><patchExecutionTime>2505ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>92</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local iHeight is replaced by local blockRows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>93</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local jWidth is replaced by local blockRows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>718ms</time></test></testsExecutionTime><patchExecutionTime>759ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local rows is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7253ms</time></test></testsExecutionTime><patchExecutionTime>7290ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>56</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pEnd is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>665ms</time></test></testsExecutionTime><patchExecutionTime>708ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>83ms</time></test></testsExecutionTime><patchExecutionTime>163ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>66</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>190ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>70</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>197ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>79</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>180ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>84</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qEnd is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>85</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>91</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockIndex is replaced by local blockColumns to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>2566ms</time></test></testsExecutionTime><patchExecutionTime>2616ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>92</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local iHeight is replaced by local blockColumns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>93</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local jWidth is replaced by local blockColumns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockRows is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local iBlock is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>48</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local blockIndex to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local rows is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>56</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local pEnd is replaced by local blockIndex to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>66</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>3287ms</time></test></testsExecutionTime><patchExecutionTime>3369ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>70</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>111ms</time></test></testsExecutionTime><patchExecutionTime>239ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>79</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>84</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qEnd is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>85</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local blockIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>2311ms</time></test></testsExecutionTime><patchExecutionTime>2391ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>91</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockIndex is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>2844ms</time></test></testsExecutionTime><patchExecutionTime>2925ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>92</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local iHeight is replaced by local blockIndex to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>93</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local jWidth is replaced by local blockIndex to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>106ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local rows is replaced by local pStart to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>127ms</time></test></testsExecutionTime><patchExecutionTime>215ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>56</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local pEnd is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>195ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>57</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local pStart is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>77ms</time></test></testsExecutionTime><patchExecutionTime>201ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>66</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockColumns is replaced by local pStart to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>70</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local jBlock is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>79</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local columns is replaced by local pStart to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>221ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>84</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local qEnd is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>1390ms</time></test></testsExecutionTime><patchExecutionTime>1437ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>85</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local qStart is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>91</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local blockIndex is replaced by local pStart to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>3602ms</time></test></testsExecutionTime><patchExecutionTime>3628ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>92</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local iHeight is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>93</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>local jWidth is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local rows is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local columns is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local blockRows is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>472ms</time></test></testsExecutionTime><patchExecutionTime>557ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local blockColumns is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>360ms</time></test></testsExecutionTime><patchExecutionTime>412ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local iBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8044ms</time></test></testsExecutionTime><patchExecutionTime>8133ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local blockRows is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>480ms</time></test></testsExecutionTime><patchExecutionTime>568ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>42</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>access to local iBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local pStart is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>117ms</time></test></testsExecutionTime><patchExecutionTime>199ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local rows is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>56</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local pEnd is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>access to local pStart is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>65</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local jBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>198ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>66</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local blockColumns is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>181ms</time></test></testsExecutionTime><patchExecutionTime>222ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>70</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>access to local jBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>76</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local qStart is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>103ms</time></test></testsExecutionTime><patchExecutionTime>186ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>79</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local columns is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>84</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local qEnd is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>85</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>access to local qStart is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>91</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local blockIndex is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>4290ms</time></test></testsExecutionTime><patchExecutionTime>4337ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>92</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>access to local iHeight is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>93</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>access to local jWidth is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>52</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>replaced call to min with a call to max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>80</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>replaced call to min with a call to max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>52</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::min with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>80</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::min with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6862ms</time></test></testsExecutionTime><patchExecutionTime>6944ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6954ms</time></test></testsExecutionTime><patchExecutionTime>7034ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6157ms</time></test></testsExecutionTime><patchExecutionTime>6194ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11233ms</time></test></testsExecutionTime><patchExecutionTime>11279ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>5925ms</time></test></testsExecutionTime><patchExecutionTime>6005ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7817ms</time></test></testsExecutionTime><patchExecutionTime>7902ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7546ms</time></test></testsExecutionTime><patchExecutionTime>7591ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6740ms</time></test></testsExecutionTime><patchExecutionTime>6825ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8142ms</time></test></testsExecutionTime><patchExecutionTime>8231ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>77</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Substituted 52 with 53</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9166ms</time></test></testsExecutionTime><patchExecutionTime>9208ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>31452ms</time></test></testsExecutionTime><patchExecutionTime>31536ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7570ms</time></test></testsExecutionTime><patchExecutionTime>7600ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>1</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>1835ms</time></test></testsExecutionTime><patchExecutionTime>1935ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>181ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>2</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>3</block><killingTests/><suspValue>0.0854357657716761</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>181ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::min</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>102ms</time></test></testsExecutionTime><patchExecutionTime>177ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::min</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>102ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>replaced return value with null for org/apache/commons/math3/linear/BlockRealMatrix::createBlocksLayout</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8223ms</time></test></testsExecutionTime><patchExecutionTime>8274ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>106ms</time></test></testsExecutionTime><patchExecutionTime>218ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>67</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7835ms</time></test></testsExecutionTime><patchExecutionTime>7880ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>67</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>mutated return of Object value for org/apache/commons/math3/linear/BlockRealMatrix::createBlocksLayout to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10542ms</time></test></testsExecutionTime><patchExecutionTime>10588ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>99</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>2974ms</time></test></testsExecutionTime><patchExecutionTime>3059ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><methodDescription>(II)[[D</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>106</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7089ms</time></test></testsExecutionTime><patchExecutionTime>7170ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.06622661785325219</suspValue><description>the access to columns is guarded using value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.06622661785325219</suspValue><description>the access to columns is guarded using field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.06622661785325219</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.columns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getRowDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06622661785325219</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.columns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getColumnDimension()I</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7870ms</time></test></testsExecutionTime><patchExecutionTime>7915ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.06622661785325219</suspValue><description>replaced access to columns with an access to rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06622661785325219</suspValue><description>replaced access to columns with an access to blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7931ms</time></test></testsExecutionTime><patchExecutionTime>8018ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06622661785325219</suspValue><description>replaced access to columns with an access to blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9667ms</time></test></testsExecutionTime><patchExecutionTime>9711ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>11</block><killingTests/><suspValue>0.06622661785325219</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.06622661785325219</suspValue><description>the access to columns is guarded returning default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.06622661785325219</suspValue><description>the access to columns is guarded returning field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06622661785325219</suspValue><description>replaced int return with 0 for org/apache/commons/math3/linear/BlockRealMatrix::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10800ms</time></test></testsExecutionTime><patchExecutionTime>10845ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06622661785325219</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7409ms</time></test></testsExecutionTime><patchExecutionTime>7458ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests/><suspValue>0.06608186004550898</suspValue><description>the access to rows is guarded using value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests/><suspValue>0.06608186004550898</suspValue><description>the access to rows is guarded using field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06608186004550898</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.rows is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getRowDimension()I</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6689ms</time></test></testsExecutionTime><patchExecutionTime>6772ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>10</block><killingTests/><suspValue>0.06608186004550898</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.rows is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getColumnDimension()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>10</block><killingTests/><suspValue>0.06608186004550898</suspValue><description>replaced access to rows with an access to columns</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06608186004550898</suspValue><description>replaced access to rows with an access to blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11052ms</time></test></testsExecutionTime><patchExecutionTime>11089ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06608186004550898</suspValue><description>replaced access to rows with an access to blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7108ms</time></test></testsExecutionTime><patchExecutionTime>7227ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>10</block><killingTests/><suspValue>0.06608186004550898</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests/><suspValue>0.06608186004550898</suspValue><description>the access to rows is guarded returning default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests/><suspValue>0.06608186004550898</suspValue><description>the access to rows is guarded returning field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06608186004550898</suspValue><description>replaced int return with 0 for org/apache/commons/math3/linear/BlockRealMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7977ms</time></test></testsExecutionTime><patchExecutionTime>8061ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06608186004550898</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11548ms</time></test></testsExecutionTime><patchExecutionTime>11593ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>40</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blocks is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blockColumns is guarded using value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blockColumns is guarded using local row</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>40</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blocks is guarded using field blocks</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blockColumns is guarded using field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>40</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.blocks is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getData()[[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.blockColumns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getRowDimension()I</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7174ms</time></test></testsExecutionTime><patchExecutionTime>7256ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>the access to field org.apache.commons.math3.linear.BlockRealMatrix.blockColumns is replaced by the call to org.apache.commons.math3.linear.BlockRealMatrix::getColumnDimension()I</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10019ms</time></test></testsExecutionTime><patchExecutionTime>10066ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>replaced access to blockColumns with an access to rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8053ms</time></test></testsExecutionTime><patchExecutionTime>8131ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>replaced access to blockColumns with an access to columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11095ms</time></test></testsExecutionTime><patchExecutionTime>11138ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>replaced access to blockColumns with an access to blockRows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to field blockColumns is replaced by access to local row</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7480ms</time></test></testsExecutionTime><patchExecutionTime>7561ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to field blockColumns is replaced by access to local column</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10178ms</time></test></testsExecutionTime><patchExecutionTime>10222ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to field blockColumns is replaced by access to local iBlock</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local iBlock is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6742ms</time></test></testsExecutionTime><patchExecutionTime>6825ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7435ms</time></test></testsExecutionTime><patchExecutionTime>7513ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7156ms</time></test></testsExecutionTime><patchExecutionTime>7240ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local iBlock is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10130ms</time></test></testsExecutionTime><patchExecutionTime>10182ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8032ms</time></test></testsExecutionTime><patchExecutionTime>8148ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local k is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9982ms</time></test></testsExecutionTime><patchExecutionTime>10031ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local column is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8216ms</time></test></testsExecutionTime><patchExecutionTime>8306ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local row is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>5783ms</time></test></testsExecutionTime><patchExecutionTime>7179ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local iBlock is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9881ms</time></test></testsExecutionTime><patchExecutionTime>9926ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7072ms</time></test></testsExecutionTime><patchExecutionTime>7153ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local column is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7203ms</time></test></testsExecutionTime><patchExecutionTime>7291ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9314ms</time></test></testsExecutionTime><patchExecutionTime>9358ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local iBlock is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7376ms</time></test></testsExecutionTime><patchExecutionTime>7417ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7384ms</time></test></testsExecutionTime><patchExecutionTime>7472ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local k is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7687ms</time></test></testsExecutionTime><patchExecutionTime>7819ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local row is replaced by local jBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9917ms</time></test></testsExecutionTime><patchExecutionTime>9963ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>22</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local iBlock is replaced by local jBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>27</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local column is replaced by local jBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9811ms</time></test></testsExecutionTime><patchExecutionTime>9856ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>41</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local iBlock is replaced by local jBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>45</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local iBlock to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local k is replaced by local iBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10783ms</time></test></testsExecutionTime><patchExecutionTime>10823ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local iBlock is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8070ms</time></test></testsExecutionTime><patchExecutionTime>8156ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local jBlock is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10312ms</time></test></testsExecutionTime><patchExecutionTime>10355ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>local k is replaced by local jBlock to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6548ms</time></test></testsExecutionTime><patchExecutionTime>6583ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7634ms</time></test></testsExecutionTime><patchExecutionTime>7716ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8511ms</time></test></testsExecutionTime><patchExecutionTime>8551ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7953ms</time></test></testsExecutionTime><patchExecutionTime>7988ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7728ms</time></test></testsExecutionTime><patchExecutionTime>7814ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8495ms</time></test></testsExecutionTime><patchExecutionTime>8540ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9995ms</time></test></testsExecutionTime><patchExecutionTime>10044ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8166ms</time></test></testsExecutionTime><patchExecutionTime>8256ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local k is replaced by access to field BLOCK_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10861ms</time></test></testsExecutionTime><patchExecutionTime>10912ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7460ms</time></test></testsExecutionTime><patchExecutionTime>7545ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8022ms</time></test></testsExecutionTime><patchExecutionTime>8049ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6821ms</time></test></testsExecutionTime><patchExecutionTime>6863ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8816ms</time></test></testsExecutionTime><patchExecutionTime>8843ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10727ms</time></test></testsExecutionTime><patchExecutionTime>10753ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8021ms</time></test></testsExecutionTime><patchExecutionTime>8153ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9691ms</time></test></testsExecutionTime><patchExecutionTime>9731ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10704ms</time></test></testsExecutionTime><patchExecutionTime>10750ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7691ms</time></test></testsExecutionTime><patchExecutionTime>7739ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11775ms</time></test></testsExecutionTime><patchExecutionTime>11819ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local k is replaced by access to field rows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8040ms</time></test></testsExecutionTime><patchExecutionTime>8121ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7787ms</time></test></testsExecutionTime><patchExecutionTime>7833ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10618ms</time></test></testsExecutionTime><patchExecutionTime>10656ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8101ms</time></test></testsExecutionTime><patchExecutionTime>8130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7966ms</time></test></testsExecutionTime><patchExecutionTime>8010ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>5722ms</time></test></testsExecutionTime><patchExecutionTime>5754ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6792ms</time></test></testsExecutionTime><patchExecutionTime>6833ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9957ms</time></test></testsExecutionTime><patchExecutionTime>10004ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8099ms</time></test></testsExecutionTime><patchExecutionTime>8181ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8166ms</time></test></testsExecutionTime><patchExecutionTime>8254ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7254ms</time></test></testsExecutionTime><patchExecutionTime>7297ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8667ms</time></test></testsExecutionTime><patchExecutionTime>8708ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local k is replaced by access to field columns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10402ms</time></test></testsExecutionTime><patchExecutionTime>10445ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field blockRows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>5</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field blockRows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10655ms</time></test></testsExecutionTime><patchExecutionTime>10699ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10343ms</time></test></testsExecutionTime><patchExecutionTime>10388ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6730ms</time></test></testsExecutionTime><patchExecutionTime>6746ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7676ms</time></test></testsExecutionTime><patchExecutionTime>7700ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7329ms</time></test></testsExecutionTime><patchExecutionTime>7428ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8082ms</time></test></testsExecutionTime><patchExecutionTime>8167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6911ms</time></test></testsExecutionTime><patchExecutionTime>6953ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10421ms</time></test></testsExecutionTime><patchExecutionTime>10466ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10402ms</time></test></testsExecutionTime><patchExecutionTime>10440ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local k is replaced by access to field blockRows</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7272ms</time></test></testsExecutionTime><patchExecutionTime>7352ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field blockColumns</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>5</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field blockColumns</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>9</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6250ms</time></test></testsExecutionTime><patchExecutionTime>6287ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6959ms</time></test></testsExecutionTime><patchExecutionTime>7048ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local row is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>5975ms</time></test></testsExecutionTime><patchExecutionTime>6006ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8942ms</time></test></testsExecutionTime><patchExecutionTime>8976ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7898ms</time></test></testsExecutionTime><patchExecutionTime>7988ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local column is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8872ms</time></test></testsExecutionTime><patchExecutionTime>8951ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7798ms</time></test></testsExecutionTime><patchExecutionTime>7847ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local iBlock is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6933ms</time></test></testsExecutionTime><patchExecutionTime>7018ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local jBlock is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6812ms</time></test></testsExecutionTime><patchExecutionTime>6847ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>48</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>access to local k is replaced by access to field blockColumns</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7770ms</time></test></testsExecutionTime><patchExecutionTime>7814ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>26</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>39</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>42</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>replaced call to blockWidth with a call to blockHeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the call to org.apache.commons.math3.linear.BlockRealMatrix::blockWidth(I)I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>40</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blocks is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blockColumns is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>40</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blocks is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blockColumns is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>40</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blocks is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>43</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the access to blockColumns is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the call to blockWidth(I)I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the call to blockWidth(I)I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the call to blockWidth(I)I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the call to blockWidth(I)I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>the call to blockWidth(I)I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>replaced call to org/apache/commons/math3/linear/BlockRealMatrix::blockWidth with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8017ms</time></test></testsExecutionTime><patchExecutionTime>8100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7900ms</time></test></testsExecutionTime><patchExecutionTime>7987ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8594ms</time></test></testsExecutionTime><patchExecutionTime>8635ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8206ms</time></test></testsExecutionTime><patchExecutionTime>8323ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7333ms</time></test></testsExecutionTime><patchExecutionTime>7418ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7288ms</time></test></testsExecutionTime><patchExecutionTime>7318ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7861ms</time></test></testsExecutionTime><patchExecutionTime>7954ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7339ms</time></test></testsExecutionTime><patchExecutionTime>7426ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6873ms</time></test></testsExecutionTime><patchExecutionTime>6913ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7558ms</time></test></testsExecutionTime><patchExecutionTime>7643ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10548ms</time></test></testsExecutionTime><patchExecutionTime>10595ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11624763874381928</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6970ms</time></test></testsExecutionTime><patchExecutionTime>7053ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>removed call to org/apache/commons/math3/linear/BlockRealMatrix::blockWidth</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>9</block><killingTests/><suspValue>0.11624763874381928</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::checkMatrixIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>replaced call to getColumnDimension with a call to getRowDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to org.apache.commons.math3.linear.AnyMatrix::getColumnDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10687ms</time></test></testsExecutionTime><patchExecutionTime>10718ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8039ms</time></test></testsExecutionTime><patchExecutionTime>8111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7301ms</time></test></testsExecutionTime><patchExecutionTime>7369ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>removed call to org/apache/commons/math3/linear/AnyMatrix::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7018ms</time></test></testsExecutionTime><patchExecutionTime>7094ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7437ms</time></test></testsExecutionTime><patchExecutionTime>7504ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>9</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>8</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7305ms</time></test></testsExecutionTime><patchExecutionTime>7413ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.04025848411142373</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>3</block><killingTests/><suspValue>0.04025848411142373</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.04025848411142373</suspValue><description>replaced call to checkRowIndex with a call to checkColumnIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>3</block><killingTests/><suspValue>0.04025848411142373</suspValue><description>replaced call to checkColumnIndex with a call to checkRowIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.04025848411142373</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::checkRowIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>3</block><killingTests/><suspValue>0.04025848411142373</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::checkColumnIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>replaced call to getRowDimension with a call to getColumnDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>the call to org.apache.commons.math3.linear.AnyMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03922322702763681</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8148ms</time></test></testsExecutionTime><patchExecutionTime>8219ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03922322702763681</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8021ms</time></test></testsExecutionTime><patchExecutionTime>8091ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03922322702763681</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8001ms</time></test></testsExecutionTime><patchExecutionTime>8023ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03922322702763681</suspValue><description>removed call to org/apache/commons/math3/linear/AnyMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11015ms</time></test></testsExecutionTime><patchExecutionTime>11044ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03922322702763681</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7266ms</time></test></testsExecutionTime><patchExecutionTime>7292ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>5</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>4</block><killingTests/><suspValue>0.03922322702763681</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03922322702763681</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7777ms</time></test></testsExecutionTime><patchExecutionTime>7848ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>94ms</time></test></testsExecutionTime><patchExecutionTime>189ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>92ms</time></test></testsExecutionTime><patchExecutionTime>193ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>91ms</time></test></testsExecutionTime><patchExecutionTime>189ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>89ms</time></test></testsExecutionTime><patchExecutionTime>182ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;(II[[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>92ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced call to &#60;init&#62;(II)V with a call to &#60;init&#62;([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>102ms</time></test></testsExecutionTime><patchExecutionTime>195ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>2</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>local rows is replaced by local columns to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>2</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>local columns is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>12</index><block>1</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>removed call to org/apache/commons/math3/linear/BlockRealMatrix::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>Substituted 4096 with 4097</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>replaced return value with null for org/apache/commons/math3/linear/MatrixUtils::createRealMatrix</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6792ms</time></test></testsExecutionTime><patchExecutionTime>6819ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>createRealMatrix</mutatedMethod><methodDescription>(II)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>mutated return of Object value for org/apache/commons/math3/linear/MatrixUtils::createRealMatrix to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7126ms</time></test></testsExecutionTime><patchExecutionTime>7200ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.18257418583505536</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to field optimizer is replaced by access to local optimizer</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7155ms</time></test></testsExecutionTime><patchExecutionTime>7221ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Removed assignment to member variable optimizer</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8224ms</time></test></testsExecutionTime><patchExecutionTime>8281ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Removed assignment to member variable observations</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>local weight is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>local x is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>local y is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>local weight is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>62ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>67ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to observations is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to observations is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to observations is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to org/apache/commons/math3/fitting/WeightedObservedPoint::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>78ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>MethodNameMutator_0</mutator><index>77</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to factory method org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; is replaced by an instantiation of type org.apache.commons.math3.optim.nonlinear.vector.ModelFunction using (Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>MethodNameMutator_0</mutator><index>82</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to factory method org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; is replaced by an instantiation of type org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian using (Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>MethodNameMutator_0</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to factory method org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optim.PointVectorValuePair using ([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6900ms</time></test></testsExecutionTime><patchExecutionTime>6963ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>MethodNameMutator_4</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the call to factory method org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optim.PointVectorValuePair using ([D[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7494ms</time></test></testsExecutionTime><patchExecutionTime>7556ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>174ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>99ms</time></test></testsExecutionTime><patchExecutionTime>162ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>64</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to optimizer is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>64</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to optimizer is guarded using field optimizer</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local target is replaced by local initialGuess to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>81ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local i is replaced by local maxEval to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>81ms</time></test></testsExecutionTime><patchExecutionTime>141ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local weights is replaced by local initialGuess to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>80ms</time></test></testsExecutionTime><patchExecutionTime>137ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local i is replaced by local maxEval to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>80ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>71</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local maxEval is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>88</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local target is replaced by local initialGuess to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>95</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local weights is replaced by local initialGuess to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>129ms</time></test></testsExecutionTime><patchExecutionTime>187ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>102</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local initialGuess is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local target is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local weights is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>88</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local target is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>95</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local weights is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>102</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>local initialGuess is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to getY with a call to getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to getWeight with a call to getX</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to getPointRef with a call to getPoint</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to getY with a call to getX</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to getWeight with a call to getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to getPointRef with a call to getValue</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to getPointRef with a call to getValueRef</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getY()D is guarded using default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getWeight()D is guarded using default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>77</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction::getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>82</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction::getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>105</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer::optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to org.apache.commons.math3.optim.PointVectorValuePair::getPointRef()[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>64</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to optimizer is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to observations is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>64</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to optimizer is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getY()D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getWeight()D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>77</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>105</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getPointRef()[D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to size()I is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to size()I is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getY()D is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getWeight()D is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>77</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>82</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>105</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getPointRef()[D is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to size()I is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getY()D is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getWeight()D is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>77</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction; is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>82</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian; is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>105</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the call to getPointRef()[D is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>59</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>95ms</time></test></testsExecutionTime><patchExecutionTime>150ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>72</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/MaxEval::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>89</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/Target::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/Weight::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>82ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>103</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/InitialGuess::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>79ms</time></test></testsExecutionTime><patchExecutionTime>145ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>91ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Substituted 6 with 7</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>68</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Substituted 2 with 3</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>85</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Substituted 3 with 4</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>92</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>6635ms</time></test></testsExecutionTime><patchExecutionTime>6693ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>99</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7766ms</time></test></testsExecutionTime><patchExecutionTime>7777ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>82ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/fitting/WeightedObservedPoint::getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/fitting/WeightedObservedPoint::getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction::getModelFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction::getModelFunctionJacobian</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer::optimize</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7960ms</time></test></testsExecutionTime><patchExecutionTime>8024ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>110</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/PointVectorValuePair::getPointRef</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>111</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced return value with null for org/apache/commons/math3/fitting/CurveFitter::fit</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>111</index><block>5</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>mutated return of Object value for org/apache/commons/math3/fitting/CurveFitter::fit to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>49</index><block>4</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>80ms</time></test></testsExecutionTime><patchExecutionTime>155ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to org.apache.commons.math3.fitting.CurveFitter::fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to org/apache/commons/math3/fitting/CurveFitter::fit with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>82ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/fitting/CurveFitter::fit</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>85ms</time></test></testsExecutionTime><patchExecutionTime>141ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced return value with null for org/apache/commons/math3/fitting/CurveFitter::fit</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>mutated return of Object value for org/apache/commons/math3/fitting/CurveFitter::fit to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>the access to coefficients is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>the access to coefficients is guarded using local c</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math3.analysis.polynomials.PolynomialFunction.coefficients is replaced by the call to org.apache.commons.math3.analysis.polynomials.PolynomialFunction::getCoefficients()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>47</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to field coefficients is replaced by access to local c</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>access to field coefficients is replaced by access to local c</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>the access to coefficients is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>the access to coefficients is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>the access to coefficients is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>2</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>3</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>3</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>3</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>3</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>3</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>5</block><killingTests/><suspValue>0.11470786693528087</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>47</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Removed assignment to member variable coefficients</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>11</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>local result is replaced by local argument to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>9</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><block>10</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>9</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>Substituted 2 with 3</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>55</index><block>11</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>37</index><block>9</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>11</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>50</index><block>10</block><killingTests/><suspValue>0.13018891098082389</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>the access to coefficients is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>the access to coefficients is guarded using field coefficients</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>the access to field org.apache.commons.math3.analysis.polynomials.PolynomialFunction.coefficients is replaced by the call to org.apache.commons.math3.analysis.polynomials.PolynomialFunction::getCoefficients()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>the access to the local this is replaced a call this.negate()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>the access to coefficients is guarded returning default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>the access to coefficients is guarded returning local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>replaced call to org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>removed call to org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::value</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>6</block><killingTests/><suspValue>0.13736056394868904</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::value</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced access to SAFE_MIN with an access to EPSILON</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 100.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 1.0E-10 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 1.0E-10 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 1.0E-10 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to initialStepBoundFactor with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to costRelativeTolerance with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to parRelativeTolerance with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to orthoTolerance with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to qrRankingThreshold with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field initialStepBoundFactor is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field costRelativeTolerance is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field parRelativeTolerance is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field orthoTolerance is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field qrRankingThreshold is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field initialStepBoundFactor is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field costRelativeTolerance is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field parRelativeTolerance is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field orthoTolerance is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field qrRankingThreshold is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field initialStepBoundFactor is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field costRelativeTolerance is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field parRelativeTolerance is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field orthoTolerance is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field qrRankingThreshold is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable orthoTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable qrRankingThreshold</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.03946685189819292</suspValue><description>local rowDimension is replaced by local columnDimension to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>2</block><killingTests/><suspValue>0.03949762527666821</suspValue><description>local columnDimension is replaced by local rowDimension to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.03946685189819292</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests/><suspValue>0.03949762527666821</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.03946685189819292</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>2</block><killingTests/><suspValue>0.03949762527666821</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03946685189819292</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03949762527666821</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>103ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.03946685189819292</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>2</block><killingTests/><suspValue>0.03949762527666821</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03946685189819292</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>116ms</time></test></testsExecutionTime><patchExecutionTime>182ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03949762527666821</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; with a call to createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; with a call to createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; with a call to createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>109ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; with a call to createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>158ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; with a call to createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; with a call to createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>114ms</time></test></testsExecutionTime><patchExecutionTime>175ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>28</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>28</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to field org.apache.commons.math3.optim.nonlinear.vector.Weight.weightMatrix is replaced by the call to org.apache.commons.math3.optim.nonlinear.vector.Weight::getWeight()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>local dim is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7968ms</time></test></testsExecutionTime><patchExecutionTime>8031ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7868ms</time></test></testsExecutionTime><patchExecutionTime>7932ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7880ms</time></test></testsExecutionTime><patchExecutionTime>7942ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to setEntry with a call to addToEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to setEntry with a call to multiplyEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>28</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>28</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>28</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::setEntry(IID)V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>11167ms</time></test></testsExecutionTime><patchExecutionTime>11179ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8091ms</time></test></testsExecutionTime><patchExecutionTime>8154ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::createRealMatrix</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>99ms</time></test></testsExecutionTime><patchExecutionTime>156ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>24</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8026ms</time></test></testsExecutionTime><patchExecutionTime>8082ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::setEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Removed assignment to member variable weightMatrix</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8255ms</time></test></testsExecutionTime><patchExecutionTime>8318ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded using field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>the access to field org.apache.commons.math3.optim.nonlinear.vector.Weight.weightMatrix is replaced by the call to org.apache.commons.math3.optim.nonlinear.vector.Weight::getWeight()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8047ms</time></test></testsExecutionTime><patchExecutionTime>8101ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to copy with a call to transpose</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the access to weightMatrix is guarded returning field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::copy</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7783ms</time></test></testsExecutionTime><patchExecutionTime>7848ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced return value with null for org/apache/commons/math3/optim/nonlinear/vector/Weight::getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>mutated return of Object value for org/apache/commons/math3/optim/nonlinear/vector/Weight::getWeight to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to org/apache/commons/math3/linear/RealMatrix::copy with receiver</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>39104ms</time></test></testsExecutionTime><patchExecutionTime>39285ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>MethodNameMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to factory method org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optim.PointVectorValuePair using ([D[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>MethodNameMutator_4</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to factory method org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optim.PointVectorValuePair using ([D[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer::optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer::parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/JacobianMultivariateVectorOptimizer::optimize</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced return value with null for org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer::optimize</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>mutated return of Object value for org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer::optimize to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer::parseOptimizationData</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>local arr$ is replaced by local optData to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>local len$ is replaced by local i$ to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>local arr$ is replaced by local optData to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7914ms</time></test></testsExecutionTime><patchExecutionTime>7983ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to org.apache.commons.math3.optim.nonlinear.vector.Weight::getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer::squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer::squareRoot with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7950ms</time></test></testsExecutionTime><patchExecutionTime>8007ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>10999ms</time></test></testsExecutionTime><patchExecutionTime>11015ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/Weight::getWeight</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>8141ms</time></test></testsExecutionTime><patchExecutionTime>8202ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer::squareRoot</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>3</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7898ms</time></test></testsExecutionTime><patchExecutionTime>7966ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>15</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>15</index><block>2</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/OptimizationData;)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>33</index><block>4</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>Removed assignment to member variable weightMatrixSqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field weight is replaced by access to local weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field x is replaced by access to local weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field y is replaced by access to local weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field weight is replaced by access to local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field x is replaced by access to local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field y is replaced by access to local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field weight is replaced by access to local y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field x is replaced by access to local y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>access to field y is replaced by access to local y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>local weight is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>local x is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>local y is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>local weight is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to weight is guarded using value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to weight is guarded using field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>the access to field org.apache.commons.math3.fitting.WeightedObservedPoint.weight is replaced by the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getWeight()D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>145ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to field org.apache.commons.math3.fitting.WeightedObservedPoint.weight is replaced by the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getX()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to field org.apache.commons.math3.fitting.WeightedObservedPoint.weight is replaced by the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getY()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced access to weight with an access to x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced access to weight with an access to y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to weight is guarded returning default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>the access to weight is guarded returning field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/fitting/WeightedObservedPoint::getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/fitting/WeightedObservedPoint::getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded using field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.fitting.WeightedObservedPoint.y is replaced by the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getWeight()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.fitting.WeightedObservedPoint.y is replaced by the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getX()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.math3.fitting.WeightedObservedPoint.y is replaced by the call to org.apache.commons.math3.fitting.WeightedObservedPoint::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>replaced access to y with an access to weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded returning default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>the access to y is guarded returning field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/fitting/WeightedObservedPoint::getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.1889822365046136</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/fitting/WeightedObservedPoint::getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>access to field checker is replaced by access to local checker</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06711560552140243</suspValue><description>removed call to org/apache/commons/math3/optim/BaseOptimizer$MaxEvalCallback::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06711560552140243</suspValue><description>removed call to org/apache/commons/math3/optim/BaseOptimizer$MaxIterCallback::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>32</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>Removed assignment to member variable checker</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>Removed assignment to member variable evaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.BaseOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>33</index><block>0</block><killingTests/><suspValue>0.06711560552140243</suspValue><description>Removed assignment to member variable iterations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>7910ms</time></test></testsExecutionTime><patchExecutionTime>7958ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>26350ms</time></test></testsExecutionTime><patchExecutionTime>26595ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>141ms</time></test></testsExecutionTime><patchExecutionTime>186ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field LN_MANT_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field LN_MANT_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>138ms</time></test></testsExecutionTime><patchExecutionTime>224ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>4370ms</time></test></testsExecutionTime><patchExecutionTime>4457ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local a is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>92ms</time></test></testsExecutionTime><patchExecutionTime>175ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>access to local b is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>4010ms</time></test></testsExecutionTime><patchExecutionTime>4056ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>2</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/FastMath::min</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03849001794597505</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>4072ms</time></test></testsExecutionTime><patchExecutionTime>4159ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTests/><suspValue>0.03849001794597505</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MaxEval.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.MaxEval</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>21</index><block>2</block><killingTests/><suspValue>0.07235746052924216</suspValue><description>access to field maxEval is replaced by access to local max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MaxEval.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.MaxEval</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07235746052924216</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MaxEval.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.MaxEval</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>149ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MaxEval.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.MaxEval</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MaxEval.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.MaxEval</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MaxEval.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.MaxEval</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>2</block><killingTests/><suspValue>0.07235746052924216</suspValue><description>Removed assignment to member variable maxEval</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>2</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>2</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>2</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>replaced access to maximalCount with an access to count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>access to field count is replaced by access to local max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>2</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>access to field maximalCount is replaced by access to local max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>access to field maxCountCallback is replaced by access to local cb</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03396178054056622</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>0</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03396178054056622</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>2</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>Removed assignment to member variable maximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.03396178054056622</suspValue><description>Removed assignment to member variable maxCountCallback</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>66ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>164ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>162ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>99ms</time></test></testsExecutionTime><patchExecutionTime>155ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math3.fitting.PolynomialFitter::fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>the call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>the call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning local guess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to org/apache/commons/math3/fitting/PolynomialFitter::fit with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math3/analysis/polynomials/PolynomialFunction$Parametric::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math3/fitting/PolynomialFitter::fit</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>replaced return value with null for org/apache/commons/math3/fitting/PolynomialFitter::fit</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>mutated return of Object value for org/apache/commons/math3/fitting/PolynomialFitter::fit to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>12</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>access to field f is replaced by access to local f</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable this$0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable f</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunction</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction$1::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunction</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/ModelFunction::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunction</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced return value with null for org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction::getModelFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunction</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>mutated return of Object value for org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction::getModelFunction to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunctionJacobian</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction$2::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunctionJacobian</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>removed call to org/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunctionJacobian</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>2</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced return value with null for org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction::getModelFunctionJacobian</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction</mutatedClass><mutatedMethod>getModelFunctionJacobian</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>mutated return of Object value for org/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction::getModelFunctionJacobian to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03115884764248779</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.03115884764248779</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03115884764248779</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>access to field init is replaced by access to local startPoint</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>removed call to [D::clone</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.07516460280028289</suspValue><description>Removed assignment to member variable init</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>access to field target is replaced by access to local observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed call to [D::clone</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>Removed assignment to member variable target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>ModelFunctionJacobian.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10482848367219183</suspValue><description>access to field jacobian is replaced by access to local j</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>ModelFunctionJacobian.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10482848367219183</suspValue><description>Removed assignment to member variable jacobian</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>ModelFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.ModelFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>access to field model is replaced by access to local m</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>ModelFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.vector.ModelFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>Removed assignment to member variable model</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable this$1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable this$1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
</mutations>
