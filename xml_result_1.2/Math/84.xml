<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to setMaxIterations with a call to setMaxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to setMaxEvaluations with a call to setMaxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxEvaluations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxEvaluations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxEvaluations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxEvaluations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to setMaxEvaluations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxIterations(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxEvaluations(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/SimpleScalarValueChecker::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer::setConvergenceChecker</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer::setMaxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer::setMaxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>106</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>106</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>106</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>106</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>106</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>106</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>62</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>98</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded using field startConfiguration</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>62</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded using field startConfiguration</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>98</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local vertexI is replaced by local startPoint to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>82</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>83</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local startPoint is replaced by local confI to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>86</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local confI is replaced by local startPoint to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>87</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>99</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>104</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local vertexI is replaced by local startPoint to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local vertexI is replaced by local confI to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>82</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>83</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local startPoint is replaced by local vertexI to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>86</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local confI is replaced by local vertexI to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>87</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local k is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>104</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>local vertexI is replaced by local confI to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>56</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>63</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>68</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>76</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>77</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>82</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>84</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>87</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>99</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>57ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>35</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>56</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>63</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>68</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>76</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>77</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>82</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>84</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>87</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>99</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>35</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>56</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>57</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>63</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>68</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>76</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>77</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>82</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>84</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>87</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>99</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>35</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>56</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>57</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>63</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>68</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>76</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>77</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>82</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>84</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>87</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local k is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>99</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>62</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>98</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>62</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>98</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>373</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>62</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>98</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>106</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>110</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>73</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>28</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>29</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>24</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>58</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>78</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>58</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>78</index><block>27</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>26</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>buildSimplex</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>110</index><block>29</block><killingTests/><suspValue>0.3651483716701107</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to evaluations is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to maxEvaluations is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>28</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to evaluations is guarded using field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to maxEvaluations is guarded using field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>28</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to f is guarded using field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxEvaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxEvaluations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxEvaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxEvaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxEvaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxEvaluations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxEvaluations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxEvaluations with an access to evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.analysis.MultivariateRealFunction::value([D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to evaluations is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to maxEvaluations is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>28</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to f is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to value([D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/analysis/MultivariateRealFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>31</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/optimization/direct/DirectSearchOptimizer::evaluate</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>23</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/optimization/direct/DirectSearchOptimizer::evaluate</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>41</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([III)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([III)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([III)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([BII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([BII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([BII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([BII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([JII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([JII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([JII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([JII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>41</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([BII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([BII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([JII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([JII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>41</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([III)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([III)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>41</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>41</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>41</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced call to sort([Ljava/lang/Object;Ljava/util/Comparator;)V with a call to sort([III)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>50</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>50</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>33</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to getPointRef with a call to getPoint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>27</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.RealPointValuePair::getPointRef()[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.RealPointValuePair::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>39</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::evaluate([D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>50</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>14</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>32</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>50</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>50</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getPointRef()[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getValue()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to evaluate([D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getPointRef()[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getValue()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>39</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to evaluate([D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getPointRef()[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>26</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getValue()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>39</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to evaluate([D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getPointRef()[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getValue()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>39</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to evaluate([D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getPointRef()[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to getValue()D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>39</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to evaluate([D)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>41</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::getPointRef</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>33</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer::evaluate</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>32</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>31</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>evaluateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>34</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed call to java/util/Arrays::sort</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to maxIterations is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded using field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to maxIterations is guarded using field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxIterations(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxEvaluations()I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxEvaluations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to maxIterations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to maxIterations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to maxEvaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to maxIterations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>9</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to evaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to maxIterations with an access to evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to maxIterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to maxIterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to maxIterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>18</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>18</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>Removed assignment to member variable iterations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>116</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>121</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>116</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using local previous</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>121</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using local previous</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded using field startConfiguration</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded using field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>116</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>121</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded using field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>39</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>44</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>39</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxEvaluations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>44</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.evaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxEvaluations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getMaxEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::getEvaluations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>39</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to iterations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>44</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>39</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to iterations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>44</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>286</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>39</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to iterations with an access to evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>44</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to evaluations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to iterations with an access to evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>26</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to field f is replaced by access to local f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>116</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>access to field simplex is replaced by access to local previous</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>121</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>access to field simplex is replaced by access to local previous</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local f is replaced by access to field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>118</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>access to local previous is replaced by access to field simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to buildSimplex with a call to setStartConfiguration</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>54</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced call to evaluateSimplex with a call to iterateSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>307</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>128</index><block>17</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>replaced call to iterateSimplex with a call to evaluateSimplex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to startConfiguration is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>58</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to simplex is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>65</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to iterations is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>116</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>121</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to simplex is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to buildSimplex([D)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>54</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to evaluateSimplex(Ljava/util/Comparator;)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>307</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>128</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to iterateSimplex(Ljava/util/Comparator;)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>288</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::buildSimplex([D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>54</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::evaluateSimplex(Ljava/util/Comparator;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>307</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>128</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::iterateSimplex(Ljava/util/Comparator;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>33</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer$1::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>119</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>66</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>66</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer::buildSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer::evaluateSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>17</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>128</index><block>17</block><killingTests/><suspValue>0.3922322702763681</suspValue><description>removed call to org/apache/commons/math/optimization/direct/DirectSearchOptimizer::iterateSimplex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>12</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setConvergenceChecker</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.checker is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setConvergenceChecker</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to field checker is replaced by access to local checker</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setConvergenceChecker</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local checker is replaced by access to field checker</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setConvergenceChecker</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable checker</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxEvaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxEvaluations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxEvaluations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxEvaluations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxEvaluations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxEvaluations with an access to evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to field maxEvaluations is replaced by access to local maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxEvaluations is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxEvaluations is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxEvaluations is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxEvaluations is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxEvaluations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setMaxEvaluations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxIterations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxIterations with an access to maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>replaced access to maxIterations with an access to evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to field maxIterations is replaced by access to local maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxIterations is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxIterations is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxIterations is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>access to local maxIterations is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to startConfiguration is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to startConfiguration is guarded using field startConfiguration</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to field org.apache.commons.math.optimization.direct.DirectSearchOptimizer.startConfiguration is replaced by the call to org.apache.commons.math.optimization.direct.DirectSearchOptimizer::setStartConfiguration([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local steps is replaced by local vertexI to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local steps is replaced by local vertexI to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local vertexI is replaced by local steps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>71</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>71</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>71</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>71</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>71</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field maxEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local n is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>71</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local j is replaced by access to field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to startConfiguration is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>77</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><block>6</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>68</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Removed assignment to member variable startConfiguration</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer</mutatedClass><mutatedMethod>setStartConfiguration</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>81</index><block>6</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Removed assignment to member variable khi</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Removed assignment to member variable gamma</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>90</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>90</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>90</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>90</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>90</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>90</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;([DDZ)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>83</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>104</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded using local original</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>83</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded using local original</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>104</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded using local original</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to field simplex is replaced by access to local original</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to field simplex is replaced by access to local original</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>83</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to field simplex is replaced by access to local original</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>104</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to field simplex is replaced by access to local original</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xTransformed is replaced by local xSmallest to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xSmallest is replaced by local xOriginal to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xSmallest is replaced by local xOriginal to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xOriginal is replaced by local xSmallest to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xTransformed is replaced by local xSmallest to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>55</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local n is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xTransformed is replaced by local xOriginal to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>61</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xSmallest is replaced by local xTransformed to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xSmallest is replaced by local xTransformed to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>67</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xOriginal is replaced by local xTransformed to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local xTransformed is replaced by local xOriginal to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local coeff is replaced by access to field khi</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local coeff is replaced by access to field gamma</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to getPointRef with a call to getPoint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>43</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to getPointRef with a call to getPoint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>100</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to evaluateSimplex with a call to iterateSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.apache.commons.math.optimization.RealPointValuePair::getPointRef()[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>43</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.apache.commons.math.optimization.RealPointValuePair::getPointRef()[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>83</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>104</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to getPointRef()[D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>43</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to getPointRef()[D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>100</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateSimplex(Ljava/util/Comparator;)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>100</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.apache.commons.math.optimization.direct.MultiDirectional::evaluateSimplex(Ljava/util/Comparator;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>90</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>10</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>9</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::getPointRef</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::getPointRef</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>107</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/direct/MultiDirectional::evaluateNewSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>107</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/direct/MultiDirectional::evaluateNewSimplex to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><block>11</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/optimization/direct/MultiDirectional::evaluateSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Removed assignment to member variable simplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>evaluateNewSimplex</mutatedMethod><methodDescription>([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>94</index><block>10</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>MethodNameMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.math.optimization.direct.MultiDirectional.evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>MethodNameMutator_0</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.math.optimization.direct.MultiDirectional.evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>MethodNameMutator_4</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.math.optimization.direct.MultiDirectional.evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>MethodNameMutator_4</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.math.optimization.direct.MultiDirectional.evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to gamma is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to gamma is guarded using field khi</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to gamma with an access to khi</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local reflected is replaced by local best to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local best is replaced by local reflected to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local contracted is replaced by local best to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local best is replaced by local reflected to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>72</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local contracted is replaced by local reflected to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>73</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local best is replaced by local contracted to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.apache.commons.math.optimization.direct.MultiDirectional::evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.util.Comparator::compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.apache.commons.math.optimization.direct.MultiDirectional::evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.util.Comparator::compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to gamma is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to gamma is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to simplex is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to gamma is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to compare(Ljava/lang/Object;Ljava/lang/Object;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.apache.commons.math.optimization.direct.MultiDirectional::incrementIterationsCounter()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><block>4</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMath283(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testRosenbrock(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>4</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMath283(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testRosenbrock(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/optimization/direct/MultiDirectional::evaluateNewSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/util/Comparator::compare</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/optimization/direct/MultiDirectional::evaluateNewSimplex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/util/Comparator::compare</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>75</index><block>4</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testPowell(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMath283(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testRosenbrock(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MultiDirectional.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.MultiDirectional</mutatedClass><mutatedMethod>iterateSimplex</mutatedMethod><methodDescription>(Ljava/util/Comparator;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/optimization/direct/MultiDirectional::incrementIterationsCounter</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>access to field point is replaced by access to local point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>access to field value is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>Removed assignment to member variable point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>access to field point is replaced by access to local point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>access to field value is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>Removed assignment to member variable point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DDZ)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>the access to point is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>the access to point is guarded using field point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>the access to field org.apache.commons.math.optimization.RealPointValuePair.point is replaced by the call to org.apache.commons.math.optimization.RealPointValuePair::getPoint()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>the access to field org.apache.commons.math.optimization.RealPointValuePair.point is replaced by the call to org.apache.commons.math.optimization.RealPointValuePair::getPointRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>the access to point is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>the access to point is guarded returning field point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/RealPointValuePair::getPointRef</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPointRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.34299717028501764</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/RealPointValuePair::getPointRef to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the access to field org.apache.commons.math.optimization.RealPointValuePair.value is replaced by the call to org.apache.commons.math.optimization.RealPointValuePair::getValue()D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the access to value is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>the access to value is guarded returning field value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/optimization/RealPointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/optimization/RealPointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/direct/DirectSearchOptimizer;Lorg/apache/commons/math/optimization/GoalType;)V</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable this$0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/direct/DirectSearchOptimizer;Lorg/apache/commons/math/optimization/GoalType;)V</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3651483716701107</suspValue><description>Removed assignment to member variable val$goalType</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to val$goalType is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to val$goalType is guarded using field val$goalType</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced access to MINIMIZE with an access to MAXIMIZE</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>local o1 is replaced by local o2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>local o2 is replaced by local o1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>local v1 is replaced by local v2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>local v2 is replaced by local v1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>local v2 is replaced by local v1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>local v1 is replaced by local v2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to org.apache.commons.math.optimization.RealPointValuePair::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to org.apache.commons.math.optimization.RealPointValuePair::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the access to val$goalType is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to getValue()D is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>the call to getValue()D is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed call to java/lang/Double::compare</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed call to java/lang/Double::compare</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>26</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/direct/DirectSearchOptimizer$1::compare</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DirectSearchOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>3</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.3922322702763681</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleScalarValueChecker.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.SimpleScalarValueChecker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 1.1102230246251565E-14 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleScalarValueChecker.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.SimpleScalarValueChecker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 2.2250738585072014E-306 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleScalarValueChecker.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.SimpleScalarValueChecker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Removed assignment to member variable relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleScalarValueChecker.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.SimpleScalarValueChecker</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Removed assignment to member variable absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(org.apache.commons.math.optimization.direct.MultiDirectionalTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
</mutations>
