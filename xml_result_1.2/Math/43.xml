<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log(D[D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to log with a call to expm1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>removed call to org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11286652959662007</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>192</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced access to LN_QUICK_COEF with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>193</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced access to LN_QUICK_COEF with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>203</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced access to LN_QUICK_COEF with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>204</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced access to LN_QUICK_COEF with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>214</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced access to LN_QUICK_COEF with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>267</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced access to LN_QUICK_COEF with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>277</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced access to LN_QUICK_COEF with an access to LN_HI_PREC_COEF</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local x is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>164</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>185</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local i is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>227</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>241</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>247</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>255</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>263</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>268</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local i is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>273</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>278</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local i is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>283</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>289</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>297</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>305</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>315</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>335</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>351</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>393</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>local hiPrec is replaced by local lnm to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>819</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>local hiPrec is replaced by local lnm to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>164</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>185</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>227</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>241</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>247</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>255</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>263</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>273</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>283</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>289</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>297</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>143ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>305</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>315</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>335</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>351</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>185</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>227</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>241</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>247</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>255</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>263</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>273</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>283</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>289</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>297</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>305</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>315</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>335</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>351</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>185</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>227</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>241</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>247</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>255</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>263</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>273</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>283</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>289</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>297</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>305</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>315</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>335</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>351</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local tmp to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>185</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>189</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>227</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>241</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>247</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>255</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>263</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>273</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>283</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>289</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>297</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>305</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>315</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>335</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>351</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local aa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>131ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>227</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>241</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>247</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>255</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>263</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>273</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>283</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>289</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>297</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>305</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>315</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local xb is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>329</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>335</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local tmp is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>343</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local aa is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ab is replaced by local ya to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>351</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local ya is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>local yb is replaced by local ab to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>79</index><block>12</block><killingTests/><suspValue>0.09790129997472563</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>131</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>138</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>150</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>157</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>164</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>268</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>278</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>361</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>371</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>376</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>393</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>670</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>736</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>747</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>819</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>79</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>131</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>138</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>150</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>157</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>164</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>268</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>278</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>361</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>371</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>376</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>393</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>670</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>736</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>747</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>819</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>131</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>138</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>150</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>157</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>164</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>268</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>278</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>393</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>670</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>736</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>747</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>819</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>131</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>138</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>150</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>157</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>164</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>268</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>278</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>393</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>670</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>736</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>747</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>819</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>24</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>131</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>134</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>access to local exp is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>138</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>142</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>146</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>access to local hiPrec is replaced by access to field TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>150</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>156</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>157</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>164</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>171</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>173</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>178</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>179</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1165</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>184</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>188</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>224</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>225</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>230</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>231</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>233</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>234</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>237</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>238</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>244</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>250</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>251</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>253</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>258</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>259</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>261</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>266</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>268</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>276</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>278</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local i is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>286</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>292</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>293</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>295</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>300</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>301</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>303</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>312</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>313</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>318</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>319</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>321</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>322</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>325</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>326</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>332</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>338</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>339</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>341</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local tmp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>346</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local aa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>347</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>349</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ab is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>354</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local ya is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>355</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>access to local yb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>393</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>670</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>736</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>747</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local exp is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>819</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>access to local hiPrec is replaced by access to field TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>replaced call to doubleToLongBits with a call to doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>141</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>221</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>308</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Substituted 52 with 53</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Substituted 1023 with 1024</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Substituted 9218868437227405312 with 9218868437227405313</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>132</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>139</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>Substituted 1.01 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>143</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>Substituted 0.99 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>151</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>159</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>165</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1.073741824E9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>195</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>198</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>206</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>209</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>216</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>245</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1.073741824E9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>270</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>280</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>287</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1.073741824E9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>333</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Substituted 1.073741824E9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>362</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 4499201580859392 with 4499201580859393</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>364</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 42 with 43</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>372</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 4398046511103 with 4398046511104</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>375</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>377</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 4499201580859392 with 4499201580859393</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>385</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>389</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>619</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Substituted -0.16624882440418567 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>626</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Substituted 0.19999954120254515 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>634</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Substituted -0.2499999997677497 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>642</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Substituted 0.3333333333332802 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>650</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Substituted -0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>658</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>669</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 0.6931470632553101 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>676</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>682</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>692</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>735</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 1.1730463525082348E-7 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>746</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 1.1730463525082348E-7 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>767</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>777</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>695</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>720</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>751</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>780</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>805</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>246</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>260</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>294</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>296</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>304</index><block>24</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>314</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>324</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>328</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>340</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>342</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>350</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>356</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>365</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>373</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>378</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>380</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>381</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>625</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>627</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>633</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>635</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>641</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>643</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>649</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>651</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>657</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>659</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>665</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11458229725677065</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>672</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>684</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>690</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>694</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>705</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>711</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>717</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>719</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>730</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>738</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>739</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>745</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>749</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>750</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>761</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>769</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>775</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>779</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>790</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>796</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>802</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>804</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>815</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>837</index><block>31</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>12</block><killingTests/><suspValue>0.09790129997472563</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>394</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>820</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>4</block><killingTests/><suspValue>0.0978231976089037</suspValue><description>removed call to java/lang/Double::doubleToLongBits</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>360</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed call to org/apache/commons/math/util/FastMath$lnMant::access$400</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>357</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>838</index><block>31</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>84</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>133</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>135</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>147</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>394</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>820</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09774528186766118</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.0978231976089037</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>84</index><block>12</block><killingTests/><suspValue>0.09790129997472563</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>133</index><block>18</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>135</index><block>19</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09790129997472563</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>147</index><block>22</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>394</index><block>26</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>820</index><block>30</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>141</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>145</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>221</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>141</index><block>20</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>145</index><block>21</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.11359236684941297</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>221</index><block>23</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>357</index><block>25</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.15877683720748895</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>838</index><block>31</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.09885336094784052</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>(D[D)D</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>308</index><block>24</block><killingTests/><suspValue>0.15877683720748895</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to sqrt with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced call to java/lang/Math::sqrt with argument</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>removed call to java/lang/Math::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.07918075824648958</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/Sum;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfSquares;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Min;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Max;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/GeometricMean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Mean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Variance;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(ZLorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(ZLorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(ZLorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(ZLorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/Sum;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfSquares;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Min;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Max;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/GeometricMean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Mean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Variance;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(ZLorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(ZLorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/Sum;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfSquares;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Min;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Max;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/GeometricMean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Mean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Variance;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/Sum;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfSquares;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Min;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Max;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/GeometricMean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Mean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Variance;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/Sum;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfSquares;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Min;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Max;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/GeometricMean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Mean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Variance;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/Sum;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfSquares;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Min;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/rank/Max;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/GeometricMean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Mean;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/Variance;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V with a call to &#60;init&#62;(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>67</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sum is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>89</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumsq is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to min is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>101</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to max is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>107</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>113</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to geoMean is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to mean is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>125</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to variance is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumsqImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMinImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setMaxImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumsqImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to minImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to maxImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumLogImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to geoMeanImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to meanImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to varianceImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumsqImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to minImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to maxImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumLogImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to geoMeanImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to meanImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to varianceImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumsqImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to minImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to maxImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumLogImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to geoMeanImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to meanImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to varianceImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumsqImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to minImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to maxImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumLogImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to geoMeanImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to meanImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to varianceImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumsqImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to minImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to maxImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumLogImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to geoMeanImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to meanImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to varianceImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumsqImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to minImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to maxImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to sumLogImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to geoMeanImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to meanImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>replaced access to varianceImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>67</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sum is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>89</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumsq is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to min is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>101</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to max is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>107</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>113</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to geoMean is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to mean is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>125</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to variance is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>67</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sum is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>89</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumsq is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to min is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>101</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to max is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>107</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>113</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to geoMean is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to mean is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>125</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to variance is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>67</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>76</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>83</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sum is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>89</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumsq is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to min is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>101</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to max is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>107</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to sumLog is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>113</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to geoMean is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>119</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to mean is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>125</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to variance is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/moment/SecondMoment::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/summary/Sum::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/summary/SumOfSquares::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>74ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>36</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/rank/Min::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>43</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/rank/Max::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/summary/SumOfLogs::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/moment/GeometricMean::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>68</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/moment/Mean::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>77</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/moment/Variance::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable secondMoment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable sum</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable sumsq</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable min</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable max</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable sumLog</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>60</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable geoMean</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>69</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable mean</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>78</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable variance</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>102</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>108</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>114</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>120</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>126</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable varianceImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumsqImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to minImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to maxImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumLogImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to secondMoment is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to meanImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to varianceImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to geoMeanImpl is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>77</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumsqImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to minImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to maxImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumLogImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to secondMoment is guarded using field secondMoment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to meanImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to varianceImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to geoMeanImpl is guarded using field sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>77</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>77</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.n is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumsqImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMinImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getMaxImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getSumLogImpl()Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumsqImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to minImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to maxImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumLogImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to meanImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to varianceImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to geoMeanImpl with an access to sumImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumsqImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to minImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to maxImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumLogImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to meanImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to varianceImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to geoMeanImpl with an access to sumsqImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumsqImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to minImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to maxImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumLogImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to meanImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to varianceImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to geoMeanImpl with an access to minImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumsqImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to minImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to maxImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumLogImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to meanImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to varianceImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to geoMeanImpl with an access to maxImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumsqImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to minImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to maxImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumLogImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to meanImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to varianceImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to geoMeanImpl with an access to sumLogImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumsqImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to minImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to maxImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to sumLogImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to meanImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to varianceImpl with an access to geoMeanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>replaced access to geoMeanImpl with an access to meanImpl</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>33</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>63</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumsqImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to minImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to maxImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumLogImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to meanImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to varianceImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to geoMeanImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>77</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumsqImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to minImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to maxImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumLogImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to meanImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to varianceImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to geoMeanImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>77</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumsqImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to minImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to maxImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to sumLogImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to secondMoment is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to meanImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>52</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to varianceImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>64</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to geoMeanImpl is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>77</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic::increment(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic::increment(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic::increment(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic::increment(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic::increment(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::increment(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>42</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>42</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>66</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic::increment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic::increment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic::increment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic::increment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic::increment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/moment/SecondMoment::increment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>80</index><block>4</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.25677629550654774</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.SummaryStatistics.n is replaced by the call to org.apache.commons.math.stat.descriptive.SummaryStatistics::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SummaryStatistics.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.SummaryStatistics</mutatedClass><mutatedMethod>checkEmpty</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</killingTests><suspValue>0.7071067811865476</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>local begin is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>local length is replaced by local begin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>local begin is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>local length is replaced by local begin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>local length is replaced by local begin to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>access to local values is replaced by access to field storedData</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>access to local values is replaced by access to field storedData</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>76</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)</killingTests><suspValue>0.17407765595569785</suspValue><description>replaced boolean return with false for org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic::test</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>24ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideVarianceWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideVarianceWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)</killingTests><suspValue>0.17407765595569785</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideVarianceWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideVarianceWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>10</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>68</index><block>10</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>68</index><block>10</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>7</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17277368511627203</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>AbstractUnivariateStatistic.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic</mutatedClass><mutatedMethod>test</mutatedMethod><methodDescription>([DIIZ)Z</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>12</block><killingTests>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)</killingTests><suspValue>0.17407765595569785</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideVarianceWithMathClass(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideVarianceWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>replaced access to m1 with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>replaced access to dev with an access to m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>replaced access to nDev with an access to m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>replaced access to m1 with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>replaced access to dev with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>replaced access to nDev with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Removed assignment to member variable m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Removed assignment to member variable dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.14359163172354764</suspValue><description>Removed assignment to member variable nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>61ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to dev is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to nDev is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to dev is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to nDev is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded using field m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to dev is guarded using field m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded using field m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to nDev is guarded using field m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.n is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.n is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.n is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to dev with an access to m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to dev with an access to m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to nDev with an access to m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to nDev with an access to m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to dev with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to dev with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to nDev with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to nDev with an access to dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>replaced access to m1 with an access to nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field m1 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field m1 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field dev is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field dev is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field nDev is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field m1 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field nDev is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field m1 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field m1 is replaced by access to local n0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field dev is replaced by access to local n0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field dev is replaced by access to local n0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field nDev is replaced by access to local n0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field m1 is replaced by access to local n0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field nDev is replaced by access to local n0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to field m1 is replaced by access to local n0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>local d is replaced by local n0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>local n0 is replaced by local d to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to local d is replaced by access to field m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to local n0 is replaced by access to field m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to local d is replaced by access to field dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to local n0 is replaced by access to field dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to local d is replaced by access to field nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>access to local n0 is replaced by access to field nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>45</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to dev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to nDev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to dev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to nDev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to dev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to m1 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>the access to nDev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Removed assignment to member variable m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Removed assignment to member variable dev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>42</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Removed assignment to member variable nDev</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FirstMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.FirstMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.17631812981527</suspValue><description>Removed assignment to member variable m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.16257834438102145</suspValue><description>Removed assignment to member variable m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to m2 is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to dev is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to nDev is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to m2 is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to dev is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to nDev is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to m2 is guarded using field m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to dev is guarded using field m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to nDev is guarded using field m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.n is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.m1 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.n is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.dev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.nDev is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2 is replaced by the call to org.apache.commons.math.stat.descriptive.moment.SecondMoment::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>replaced access to m1 with an access to m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>replaced access to dev with an access to m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>replaced access to nDev with an access to m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>access to field m2 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>access to field m1 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>access to field m2 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>access to field dev is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>access to field nDev is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>access to field m2 is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>access to local d is replaced by access to field m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to m2 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to dev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to nDev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to m2 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to dev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to nDev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to m2 is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to dev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the access to nDev is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the call to increment(D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>the call to org.apache.commons.math.stat.descriptive.moment.FirstMoment::increment(D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>removed call to org/apache/commons/math/stat/descriptive/moment/FirstMoment::increment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Removed assignment to member variable m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Removed assignment to member variable m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SecondMoment.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.SecondMoment</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19549056373532236</suspValue><description>Removed assignment to member variable m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Min.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Min::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Min.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Min::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Min.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Min::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Min.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Min::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Min.n is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Min::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Min.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Min</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Max.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Max::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Substituted NaN with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.19069251784911845</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Max.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Max::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Max.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Max::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Max.value is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Max::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.rank.Max.n is replaced by the call to org.apache.commons.math.stat.descriptive.rank.Max::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Max.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.rank.Max</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22841609628806428</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18516401995451032</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.SumOfLogs::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18516401995451032</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18516401995451032</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18516401995451032</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18516401995451032</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log(D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log(D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log(D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log(D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log(D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log(D)D with a call to log(DD)D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded using field n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.SumOfLogs::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.SumOfLogs::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>removed call to org/apache/commons/math/util/FastMath::log</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfLogs.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfLogs</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18954720708196904</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.SumOfSquares::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18954720708196904</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18954720708196904</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18954720708196904</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18954720708196904</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.SumOfSquares::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.SumOfSquares::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n is replaced by the call to org.apache.commons.math.stat.descriptive.summary.SumOfSquares::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumOfSquares.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.SumOfSquares</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.Sum.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.Sum::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.Sum.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.Sum::getResult()D</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.Sum.value is replaced by the call to org.apache.commons.math.stat.descriptive.summary.Sum::increment(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.summary.Sum.n is replaced by the call to org.apache.commons.math.stat.descriptive.summary.Sum::getN()J</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to field value is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>access to local d is replaced by access to field value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to the local this is replaced a call this.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to value is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>the access to n is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.summary.Sum</mutatedClass><mutatedMethod>increment</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.22454435656953592</suspValue><description>Removed assignment to member variable n</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.Variance.incMoment is replaced by the call to org.apache.commons.math.stat.descriptive.moment.Variance::setBiasCorrected(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected is replaced by the call to org.apache.commons.math.stat.descriptive.moment.Variance::setBiasCorrected(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.Variance.incMoment is replaced by the call to org.apache.commons.math.stat.descriptive.moment.Variance::setBiasCorrected(Z)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>replaced access to incMoment with an access to isBiasCorrected</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>replaced access to isBiasCorrected with an access to incMoment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>replaced access to incMoment with an access to isBiasCorrected</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>access to field moment is replaced by access to local m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>access to field moment is replaced by access to local m2</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>Removed assignment to member variable moment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>Removed assignment to member variable incMoment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.18623125657326026</suspValue><description>Removed assignment to member variable isBiasCorrected</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>Removed assignment to member variable incMoment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Variance.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Variance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>Removed assignment to member variable moment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Mean.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Mean</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>access to field moment is replaced by access to local m1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Mean.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Mean</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Mean.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Mean</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>Removed assignment to member variable moment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Mean.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.Mean</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24494897427831783</suspValue><description>Removed assignment to member variable incMoment</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeometricMean.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.GeometricMean</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>the access to field org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs is replaced by the call to org.apache.commons.math.stat.descriptive.moment.GeometricMean::setSumLogImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeometricMean.java</sourceFile><mutatedClass>org.apache.commons.math.stat.descriptive.moment.GeometricMean</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</killingTests><suspValue>0.24618298195866545</suspValue><description>Removed assignment to member variable sumOfLogs</description><testsExecutionTime><test><name>org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
</mutations>
