<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to org/apache/commons/math/util/MathUtils::addAndCheck with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::addAndCheck</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::addAndCheck</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/math/util/MathUtils::addAndCheck</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to addAndCheck(JJLjava/lang/String;)J with a call to addAndCheck(JJ)J</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>12</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local ret is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>12</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local ret is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to org/apache/commons/math/util/MathUtils::addAndCheck with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Substituted 9223372036854775807 with -9223372036854775808</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::addAndCheck</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>85</index><block>12</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::addAndCheck</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>addAndCheck</mutatedMethod><methodDescription>(JJLjava/lang/String;)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>85</index><block>12</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/math/util/MathUtils::addAndCheck</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>62ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>18</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>21</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>21</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>22</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>54</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to binomialCoefficientDouble with a call to binomialCoefficientLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>19</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>21</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 9223372036854775807 with -9223372036854775808</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>21</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>18</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>21</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Math::round</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>34</index><block>19</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>49</index><block>22</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>73</index><block>25</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>18</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>21</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>62</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>18</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>21</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>62</index><block>23</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>19</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>22</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficient</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>25</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/math/util/MathUtils::binomialCoefficient</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to binomialCoefficientLog with a call to binomialCoefficientDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to exp with a call to log10</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to floor with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to java/lang/Math::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to java/lang/Math::floor with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to java/lang/Math::exp</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to java/lang/Math::floor</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>10</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientDouble</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>26</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/MathUtils::binomialCoefficientDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>27</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>124ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>29</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>31</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>31</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>32</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>34</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>35</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>37</block><killingTests/><suspValue>0.25</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>82</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>83</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local n is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local k is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>90</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>37</block><killingTests/><suspValue>0.25</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>37</block><killingTests/><suspValue>0.25</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>68</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>82</index><block>39</block><killingTests/><suspValue>0.25</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>83</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local k is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>90</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>local i is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>67</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>89</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>101</index><block>41</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>67</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>89</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>101</index><block>41</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>67</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>89</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>101</index><block>41</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>access to local logSum is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to log10</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to log with a call to log10</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to java/lang/Math::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to java/lang/Math::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>27</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><block>38</block><killingTests/><suspValue>0.25</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><block>40</block><killingTests/><suspValue>0.25</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>34</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>35</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>35</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>27</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>34</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>35</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>38</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>removed call to java/lang/Math::log</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>40</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>removed call to java/lang/Math::log</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>102</index><block>41</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>34</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>35</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>32</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>34</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>35</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>27</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>64</index><block>37</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>86</index><block>39</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>27</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.22941573387056174</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>64</index><block>37</block><killingTests/><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>86</index><block>39</block><killingTests/><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>binomialCoefficientLog</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>41</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.25</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/MathUtils::binomialCoefficientLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
</mutations>
