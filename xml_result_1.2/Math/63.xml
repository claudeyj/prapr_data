<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests/><suspValue>1.0</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>1.0</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests/><suspValue>1.0</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>1</block><killingTests/><suspValue>1.0</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests/><suspValue>1.0</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>1</block><killingTests/><suspValue>1.0</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>1</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTests/><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests/><suspValue>1.0</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests/><suspValue>1.0</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>121ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests/><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>1</block><killingTests/><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>59</index><block>17</block><killingTests/><suspValue>1.0</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>14</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>14</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>16</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>47</index><block>16</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local i is replaced by access to field NAN_GAP</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local i is replaced by access to field NAN_GAP</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local i is replaced by access to field NAN_GAP</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to equals with a call to equalsIncludingNaN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>72</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>41</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>16</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>11</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>12</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>16</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>11</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>16</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>14</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>17</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>50</index><block>16</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>50</index><block>16</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>15</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>([D[D)Z</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>72</index><block>20</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testArrayEquals(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
</mutations>
