<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DDI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DDI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DDI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DDI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DDI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to &#60;init&#62;(DDII)V with a call to &#60;init&#62;(DDI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>local epsilon is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDI)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.13608276348795434</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(DJJ)V with a call to &#60;init&#62;(DI)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field numerator is replaced by access to local maxDenominator</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>54</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field denominator is replaced by access to local maxDenominator</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field numerator is replaced by access to local maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>54</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field denominator is replaced by access to local maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local r0 is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local overflow is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local a0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local a0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local epsilon is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local a0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local r0 is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>104</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local r1 is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>110</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p1 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>113</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local overflow to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>118</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>119</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q1 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>121</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q0 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>123</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local overflow to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>126</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>138</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>147</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>153</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local n is replaced by local maxDenominator to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local maxIterations is replaced by local maxDenominator to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local convergent is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local value is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>160</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local epsilon is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>163</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local maxDenominator is replaced by local maxIterations to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>171</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p0 is replaced by local overflow to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>174</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>175</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local overflow to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>178</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>179</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q0 is replaced by local overflow to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>182</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q2 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>183</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local overflow to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>186</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a1 is replaced by local overflow to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>187</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a0 is replaced by local overflow to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>190</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r1 is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>191</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r0 is replaced by local value to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local r0 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local value is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local value is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>local epsilon is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>68</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local r0 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>97</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>104</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local r1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>110</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p1 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>113</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p0 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local a0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>118</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>119</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q1 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>121</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q0 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>123</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local a0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>126</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>127</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>138</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local value is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>147</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>153</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local n is replaced by local maxIterations to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>154</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local maxIterations is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local convergent is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>157</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local value is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>160</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local epsilon is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>163</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>164</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local maxDenominator is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>171</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p0 is replaced by local a0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>174</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>175</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local a0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>178</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>179</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q0 is replaced by local a0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>182</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q2 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>183</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local a0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>186</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a1 is replaced by local a0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>187</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a0 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>190</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r1 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>191</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r0 is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>68</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>97</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>104</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local r1 is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>110</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>113</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p0 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>118</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>119</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>121</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q0 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>123</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>126</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>127</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>138</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local value is replaced by local r1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>140</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>147</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>156</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local convergent is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>157</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local value is replaced by local r1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>160</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local epsilon is replaced by local r1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>163</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>171</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p0 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>174</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>175</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>178</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>179</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q0 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>182</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q2 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>183</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local p0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>186</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a1 is replaced by local p0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>187</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a0 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>190</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r1 is replaced by local r0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>191</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r0 is replaced by local r1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>97</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>110</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>113</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p0 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>118</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>119</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>121</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q0 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>123</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>126</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>127</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>140</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>147</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>156</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local convergent is replaced by local r1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>157</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local value is replaced by local convergent to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>160</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local epsilon is replaced by local convergent to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>163</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>170</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>171</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p0 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>174</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>175</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>178</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>179</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q0 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>182</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q2 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>183</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local q0 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>186</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a1 is replaced by local q0 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>187</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a0 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>190</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r1 is replaced by local convergent to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>191</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local r0 is replaced by local convergent to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>97</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>110</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>113</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p0 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>118</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>119</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>121</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q0 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>123</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>126</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>127</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>140</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>147</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>163</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>170</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>171</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p0 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>174</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>175</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>178</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>179</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q0 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>182</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q2 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>183</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local p1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>186</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a1 is replaced by local p1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>187</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a0 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>97</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a0 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>110</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>111</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>113</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p0 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>115</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>118</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local a1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>119</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>121</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q0 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>123</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q1 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>126</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>127</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>130</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>131</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local overflow is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>139</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>56ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>140</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>145</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>147</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>163</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>170</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>171</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p0 is replaced by local p2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>174</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>175</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local p1 is replaced by local p2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>178</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local p2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>217</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>179</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q0 is replaced by local p2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>182</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q2 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>218</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>183</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local q1 is replaced by local p2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>186</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a1 is replaced by local q1 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>187</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>local a0 is replaced by local p2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>49ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to floor with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to floor with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::floor with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::floor with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>129</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>155</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>162</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/math3/fraction/FractionConversionException::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>141</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/math3/fraction/FractionConversionException::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>92</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>76</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>95</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>155</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>200</index><block>12</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testConstructorDouble(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>105</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>159</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>200</index><block>12</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>200</index><block>12</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>129</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>133</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>155</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>162</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>129</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>133</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>155</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>162</index><block>9</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>167</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Removed assignment to member variable numerator</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>54</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Removed assignment to member variable denominator</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Fraction.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.Fraction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDII)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>92</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1386750490563073</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>363ms</time></test></testsExecutionTime><patchExecutionTime>381ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.02539183580595128</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3254</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>56</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>14</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.042295493443781355</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3254</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>12</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>56</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>62</index><block>14</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.042295493443781355</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>27</index><block>10</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>Substituted 4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>Substituted -4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>12</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>12</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>59</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>64</index><block>14</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.042295493443781355</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>52</index><block>12</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>11</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>52</index><block>12</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04019339355290704</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>13</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.06509445549041194</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>14</block><killingTests>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</killingTests><suspValue>0.042295493443781355</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(IF)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(IF)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(IF)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(IF)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(IF)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(IF)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced access to msgPatterns with an access to msgArguments</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced access to msgArguments with an access to msgPatterns</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>access to field throwable is replaced by access to local throwable</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed call to java/util/HashMap::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>Removed assignment to member variable throwable</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>Removed assignment to member variable msgPatterns</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>Removed assignment to member variable msgArguments</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Throwable;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>Removed assignment to member variable context</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgPatterns is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgArguments is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgPatterns is guarded using field msgPatterns</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgArguments is guarded using field msgPatterns</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced access to msgPatterns with an access to msgArguments</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced access to msgArguments with an access to msgPatterns</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgPatterns is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgArguments is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgPatterns is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgArguments is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgPatterns is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the access to msgArguments is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>replaced call to org/apache/commons/math3/exception/util/ArgUtils::flatten with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>removed call to org/apache/commons/math3/exception/util/ArgUtils::flatten</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExceptionContext.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ExceptionContext</mutatedClass><mutatedMethod>addMessage</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034239347869895034</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to toArray()[Ljava/lang/Object; with a call to toArray([Ljava/lang/Object;)[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to toArray()[Ljava/lang/Object; with a call to toArray([Ljava/lang/Object;)[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to toArray()[Ljava/lang/Object; with a call to toArray([Ljava/lang/Object;)[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to toArray()[Ljava/lang/Object; with a call to toArray([Ljava/lang/Object;)[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to toArray()[Ljava/lang/Object; with a call to toArray([Ljava/lang/Object;)[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to toArray()[Ljava/lang/Object; with a call to toArray([Ljava/lang/Object;)[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>local arr$ is replaced by local array to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>local len$ is replaced by local i$ to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>local arr$ is replaced by local array to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>the call to java.util.List::toArray()[Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>the call to toArray()[Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning local array</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>the call to toArray()[Ljava/lang/Object; is guarded returning local array</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning local arr$</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>77</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>6</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed call to java/util/List::toArray</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>83</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>replaced return value with null for org/apache/commons/math3/exception/util/ArgUtils::flatten</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.03729370703141007</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>7</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.034219295541457743</suspValue><description>mutated return of Object value for org/apache/commons/math3/exception/util/ArgUtils::flatten to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ArgUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.util.ArgUtils</mutatedClass><mutatedMethod>flatten</mutatedMethod><methodDescription>([Ljava/lang/Object;)[Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>77</index><block>6</block><killingTests/><suspValue>0.034219295541457743</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to ILLEGAL_STATE with an access to ARGUMENT_OUTSIDE_DOMAIN</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to ILLEGAL_STATE with an access to ARRAY_SIZE_EXCEEDS_MAX_VARIABLES</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to ILLEGAL_STATE with an access to ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to ILLEGAL_STATE with an access to ARRAY_SUMS_TO_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to ILLEGAL_STATE with an access to ASSYMETRIC_EIGEN_NOT_SUPPORTED</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced access to ILLEGAL_STATE with an access to AT_LEAST_ONE_COLUMN</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the access to context is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the access to field org.apache.commons.math3.exception.MathIllegalStateException.context is replaced by the call to org.apache.commons.math3.exception.MathIllegalStateException::getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the access to context is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the access to context is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the access to context is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>the call to org.apache.commons.math3.exception.util.ExceptionContext::addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>removed call to org/apache/commons/math3/exception/util/ExceptionContext::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>removed call to org/apache/commons/math3/exception/util/ExceptionContext::addMessage</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>Removed assignment to member variable context</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>getContext</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/exception/util/ExceptionContext;</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>the access to context is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>getContext</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/exception/util/ExceptionContext;</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>the access to context is guarded using field context</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>getContext</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/exception/util/ExceptionContext;</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>the access to field org.apache.commons.math3.exception.MathIllegalStateException.context is replaced by the call to org.apache.commons.math3.exception.MathIllegalStateException::getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>getContext</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/exception/util/ExceptionContext;</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>the access to context is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>getContext</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/exception/util/ExceptionContext;</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>the access to context is guarded returning field context</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>getContext</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/exception/util/ExceptionContext;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced return value with null for org/apache/commons/math3/exception/MathIllegalStateException::getContext</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathIllegalStateException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.MathIllegalStateException</mutatedClass><mutatedMethod>getContext</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/exception/util/ExceptionContext;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>mutated return of Object value for org/apache/commons/math3/exception/MathIllegalStateException::getContext to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(D)Ljava/lang/Double; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(J)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced access to FRACTION_CONVERSION_OVERFLOW with an access to ARGUMENT_OUTSIDE_DOMAIN</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced access to FRACTION_CONVERSION_OVERFLOW with an access to ARRAY_SIZE_EXCEEDS_MAX_VARIABLES</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced access to FRACTION_CONVERSION_OVERFLOW with an access to ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced access to FRACTION_CONVERSION_OVERFLOW with an access to ARRAY_SUMS_TO_ZERO</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced access to FRACTION_CONVERSION_OVERFLOW with an access to ASSYMETRIC_EIGEN_NOT_SUPPORTED</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced access to FRACTION_CONVERSION_OVERFLOW with an access to AT_LEAST_ONE_COLUMN</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local p is replaced by local q to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local q is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Long::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FractionConversionException.java</sourceFile><mutatedClass>org.apache.commons.math3.fraction.FractionConversionException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DJJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Long::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>48</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math3.exception.ConvergenceException::getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math3.exception.util.ExceptionContext::addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math3/exception/ConvergenceException::getContext</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ConvergenceException.java</sourceFile><mutatedClass>org.apache.commons.math3.exception.ConvergenceException</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math3/exception/util/ExceptionContext::addMessage</description><testsExecutionTime><test><name>org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(org.apache.commons.math3.fraction.FractionTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
</mutations>
