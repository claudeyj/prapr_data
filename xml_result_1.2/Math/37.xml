<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>local x is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>79</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>85</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>92</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local k is replaced by local quadrant to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>112</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local x to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local k is replaced by local quadrant to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>120</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>130</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>141</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>144</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local k is replaced by local quadrant to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>149</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>153</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>159</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>145ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>188</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local k is replaced by local quadrant to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>191</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local quadrant is replaced by local k to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>195</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>199</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xb is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>79</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>85</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>112</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>120</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>130</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>141</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>149</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>153</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>57ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>159</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>143ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>195</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>199</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xb is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>112</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>120</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>130</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>141</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>149</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>153</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>159</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>173</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>195</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>199</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xb is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>112</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>120</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>130</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>141</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>149</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>153</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>159</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>170</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>195</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xa is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>199</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local xb is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>120</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>130</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>141</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>149</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>153</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>159</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>170</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>69ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>130</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>141</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>149</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>153</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>159</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>170</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local a is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>79</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>85</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>92</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>144</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>188</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>202</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local quadrant is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>79</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>85</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>92</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>144</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>188</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>202</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local quadrant is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>79</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>85</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>92</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field LN_MANT_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>144</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>188</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>202</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local quadrant is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>26</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>79</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>85</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>129ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>92</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>144</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>188</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>202</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local quadrant is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>23</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>26</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>40</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>79</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>85</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>92</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>844ms</time></test></testsExecutionTime><patchExecutionTime>947ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>100</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>107</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>109</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>115</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>123</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>127</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>128</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>133</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>134</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>135</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>137</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>144</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>152</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>156</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>157</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>162</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>163</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>164</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>166</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>173</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>188</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local k is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>194</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>202</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>access to local quadrant is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>176</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>41</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>Substituted 3294198.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Substituted 0.6366197723675814 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>95</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Substituted 1.570796251296997 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>118</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Substituted 7.549789948768648E-8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>147</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Substituted 6.123233995736766E-17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>174</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>189</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>93</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>111</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>116</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>139</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>145</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>168</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>25</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>25</index><block>66</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>67</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>43</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>176</index><block>72</block><killingTests/><suspValue>0.1432229748078866</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>65</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12725695259515554</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>43</index><block>69</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>82</index><block>71</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>176</index><block>72</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1432229748078866</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>203</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>203</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>203</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>203</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cos</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>203</index><block>75</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12777531299998798</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xa is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xa is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xb is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xa is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xa is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xb is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local pi2a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xa is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xb is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>31</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local pi2b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local xb is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>31</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>20</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>26</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>28</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>34</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>35</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to pow</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to cosQ</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to atan2</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to nextAfter</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to max</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to hypot</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to IEEEremainder</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sinQ with a call to copySign</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::sinQ with argument</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Substituted 6.123233995736766E-17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Substituted 6.123233995736766E-17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>22</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>removed call to org/apache/commons/math/util/FastMath::sinQ</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>37</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::cosQ</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1758</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>44</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::cosQ</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>Substituted 20.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>124ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>removed call to org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::cosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>cosh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::cosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>135ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>131ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced call to exp(DD[D)D with a call to exp(D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>removed call to org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>864</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>149</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>local x is replaced by local extra to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>864</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>149</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>159</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>864</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>149</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>159</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>access to local hiPrec is replaced by access to field SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>864</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>149</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>159</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>864</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>149</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>159</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>access to local hiPrec is replaced by access to field COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>864</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>149</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>159</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>access to local hiPrec is replaced by access to field TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>156</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>Substituted 709 with 710</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>175</index><block>35</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>176</index><block>35</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>160</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>160</index><block>34</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>156</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.07174960033341753</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>156</index><block>33</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>exp</mutatedMethod><methodDescription>(DD[D)D</methodDescription><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>176</index><block>35</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.3849001794597505</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>21</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>22</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>43</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>43</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>43</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>43</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>21</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>30</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>43</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>21</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>30</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>43</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted 2.479773539153719E-5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>135ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted -0.0013888888689039883 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted 0.041666666666621166 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted -0.49999999999999994 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>44</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::polyCosine</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>41</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::polyCosine</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>21</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>22</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local x is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>21</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>30</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>45</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>21</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>30</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>40</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>45</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted 2.7553817452272217E-6 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted -1.9841269659586505E-4 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted 0.008333333333329196 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Substituted -0.16666666666666666 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>46</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::polySine</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>40</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10690449676496974</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::polySine</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>local x is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>45</block><killingTests/><suspValue>0.11009637651263607</suspValue><description>local xb is replaced by local x to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>local x is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>59</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>112</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>118</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>136</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>153</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>163</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>174</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>182</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>192</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>203</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>224</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local quadrant is replaced by local k to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>228</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>232</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xa is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>19</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>local x is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>152ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>59</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>73</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>112</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>118</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>136</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>153</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>163</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>174</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>182</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>192</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>203</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>206</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>228</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>232</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xa is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>136</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>153</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>163</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>174</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>182</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>192</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>203</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>228</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>232</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xa is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>153</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>163</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>174</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>182</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>192</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>203</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>228</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xb is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>232</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local xa is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>153</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>163</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>174</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>182</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>192</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>203</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>163</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>174</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>182</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>192</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>203</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local b is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>59</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>60</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>63</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>73</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>112</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>118</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>235</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local negative is replaced by access to field RECOMPUTE_TABLES_AT_RUNTIME</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>245</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local quadrant is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>141ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>59</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>60</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>63</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>73</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>112</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>118</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>235</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local negative is replaced by access to field LOAD_RESOURCES</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>245</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local quadrant is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>142ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>34</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>59</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>60</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>63</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>73</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>112</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>118</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>245</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local quadrant is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>143ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>34</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>59</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>60</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>63</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>73</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>112</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>118</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>152ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>245</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local quadrant is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>145ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>15</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>34</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>59</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>60</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>63</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>73</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>112</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>118</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>133</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>139</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>140</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>156</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>160</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>166</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>167</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>170</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>185</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>189</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>195</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>196</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>199</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local remB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>206</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>245</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>access to local quadrant is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>209</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>Substituted 3294198.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>119</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Substituted 0.6366197723675814 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>128</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Substituted 1.570796251296997 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>151</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Substituted 7.549789948768648E-8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>180</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Substituted 6.123233995736766E-17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>207</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>222</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>126</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>144</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>149</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>172</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>178</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>201</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>209</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>62</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>66</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>236</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>46</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>62</index><block>50</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>66</index><block>51</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11026356928399425</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>236</index><block>59</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>76</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>115</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>209</index><block>56</block><killingTests/><suspValue>0.12194215216993846</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>45</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11009637651263607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>76</index><block>53</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>115</index><block>55</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>209</index><block>56</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.12194215216993846</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>246</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>246</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>246</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>246</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>246</index><block>60</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11094003924504582</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to EIGHTHS with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_A with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_B with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_A with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_B with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to EIGHTHS with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_A with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_B with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>32</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_A with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_B with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>13</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to EIGHTHS with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_A with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_B with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>32</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_A with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_B with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>13</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to EIGHTHS with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_A with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_B with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>32</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_A with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_B with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>13</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to EIGHTHS with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_A with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_B with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>32</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_A with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_B with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>13</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to EIGHTHS with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_A with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>26</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to SINE_TABLE_B with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>32</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_A with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced access to COSINE_TABLE_B with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>85</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>103</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>112</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>122</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>128</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>134</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>143</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>153</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>165</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>152ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>154ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>183</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local cosEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>209</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>215</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>224</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>234</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>240</index><block>43</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>85</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>93</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>97</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>103</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>112</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>122</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>128</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>134</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>143</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>153</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>165</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>121ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>183</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xb is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local cosEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local xb is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>209</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>215</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>224</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>234</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>240</index><block>43</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>81</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>85</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>93</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>97</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>103</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>112</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>122</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>128</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>134</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>143</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>153</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>165</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>183</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xb is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local cosEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local xb is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>209</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>215</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>224</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>234</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>240</index><block>43</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>81</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>85</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>93</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>97</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>103</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>112</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>122</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>128ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>128</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>134</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>143</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>153</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>165</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>183</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xb is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local cosEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local xb is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>209</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>215</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>224</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>234</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>240</index><block>43</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>135ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>81</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>85</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>93</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>97</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>103</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>112</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>122</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>135ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>128</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>134</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>143</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>153</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>165</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>183</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xb is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local cosEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local xb is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>209</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>215</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>224</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>234</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>240</index><block>43</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>132ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local epsilon is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>81</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local temp2 is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>85</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>93</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>97</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>103</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>112</index><block>42</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>122</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>134ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>128</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>134</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>143</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local c is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>153</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>165</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sintB is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local cosEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local costB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>183</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local xb is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local costB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local cosEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sintB is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local xb is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>209</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>215</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>224</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local c is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>234</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>240</index><block>43</block><killingTests/><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>local d is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>39</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local cosEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local c is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local d is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>39</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>142ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local cosEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>146ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local c is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local d is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>39</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local c is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local d is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>21</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>27</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>33</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>39</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local c is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local d is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>21</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>27</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>33</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>39</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1637</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>62</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>68</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>69</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>71</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>76</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>77</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>78</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>84</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local temp2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>96</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>101</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>106</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>109</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>115</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>119</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>120</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>125</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>126</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>132</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>137</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>140</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1684</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>146</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>150</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>151</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local c is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>156</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>157</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>158</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>161</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>162</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>171</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>172</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>175</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sintB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>176</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local cosEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>179</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local costB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>180</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>186</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>192</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>193</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local costB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>196</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local cosEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>199</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>200</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sintB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>202</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>147ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>203</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>207</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>213</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>218</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>221</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1734</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>227</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>231</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>232</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>access to local c is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>238</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>243</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>access to local d is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polySine with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to polyCosine with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::polySine with argument</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::polyCosine with argument</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Substituted 8.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Substituted 1.073741824E9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>92</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>187</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>195</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>111</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>142</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>223</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.11233119126034607</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>189</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>removed call to org/apache/commons/math/util/FastMath::polySine</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>removed call to org/apache/commons/math/util/FastMath::polyCosine</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>244</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::sinQ</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>189</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>189</index><block>42</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>244</index><block>43</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.10943513103291655</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::sinQ</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp(D)D with a call to exp(DD[D)D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>23</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>23</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>23</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to exp with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>Substituted 20.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>removed call to org/apache/commons/math/util/FastMath::exp</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>27</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::sinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.42640143271122083</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>sinh</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.6324555320336759</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::sinh</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>the access to isNaN is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>the access to field org.apache.commons.math.complex.Complex.isNaN is replaced by the call to org.apache.commons.math.complex.Complex::isNaN()Z</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>the access to field org.apache.commons.math.complex.Complex.isNaN is replaced by the call to org.apache.commons.math.complex.Complex::isInfinite()Z</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>replaced access to isNaN with an access to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to field real is replaced by access to local real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to field imaginary is replaced by access to local real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to field real is replaced by access to local imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>access to field imaginary is replaced by access to local imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local real is replaced by local imaginary to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local imaginary is replaced by local real to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local real is replaced by local imaginary to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local imaginary is replaced by local real to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local real is replaced by local imaginary to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>local imaginary is replaced by local real to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>38</index><block>4</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>41</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>the access to isNaN is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>the access to isNaN is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>the access to isNaN is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>4</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>4</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>4</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>42</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>36</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>4</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>42</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Removed assignment to member variable real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Removed assignment to member variable imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Removed assignment to member variable isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.13245323570650439</suspValue><description>Removed assignment to member variable isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;(DD)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local realPart is replaced by local imaginaryPart to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>local imaginaryPart is replaced by local realPart to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to local realPart is replaced by access to field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to local imaginaryPart is replaced by access to field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to local realPart is replaced by access to field real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to local imaginaryPart is replaced by access to field real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>removed call to org/apache/commons/math/complex/Complex::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced return value with null for org/apache/commons/math/complex/Complex::createComplex</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>mutated return of Object value for org/apache/commons/math/complex/Complex::createComplex to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getArgument()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to imaginary is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>the access to imaginary is guarded returning field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::getImaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testTanh(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getImaginary</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::getImaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getArgument()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to real is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to real is guarded returning field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::getReal</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1649572197684645</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::getReal</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testTanInf(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
</mutations>
