<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to factorialDouble with a call to factorialLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 9223372036854775807 with -9223372036854775808</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::factorialDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Math::round</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced long return with 0 for org/apache/commons/math/util/MathUtils::factorial</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/math/util/MathUtils::factorial</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to factorialLog with a call to factorialDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to exp with a call to log10</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to floor with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/Math::exp with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/Math::floor with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::factorialLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Math::exp</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Math::floor</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::factorialDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialDouble</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/MathUtils::factorialDouble</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>8</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>8</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local n is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local i is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local logSum is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local logSum is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local logSum is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local logSum is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local logSum is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local logSum is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to log with a call to log10</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/Math::log with argument</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>8</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>8</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>8</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Math::log</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>39</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/MathUtils::factorialLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>23</index><block>8</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>factorialLog</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>10</block><killingTests>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/MathUtils::factorialLog</description><testsExecutionTime><test><name>org.apache.commons.math.util.MathUtilsTest.testFactorial(org.apache.commons.math.util.MathUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
</mutations>
